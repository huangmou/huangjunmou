com.jason.feick.AAAAcitivty -> com.jason.feick.AAAAcitivty:
    com.jason.feick.util.ToastUtil toast -> toast
    com.jason.feick.widget.LoadingDataDialogManager loadingToast -> loadingToast
    18:18:void <init>() -> <init>
    36:39:void onCreate(android.os.Bundle) -> onCreate
    48:52:void onDestroy() -> onDestroy
com.jason.feick.BuildConfig -> com.jason.feick.BuildConfig:
    boolean DEBUG -> DEBUG
    java.lang.String APPLICATION_ID -> APPLICATION_ID
    java.lang.String BUILD_TYPE -> BUILD_TYPE
    java.lang.String FLAVOR -> FLAVOR
    int VERSION_CODE -> VERSION_CODE
    java.lang.String VERSION_NAME -> VERSION_NAME
    6:6:void <init>() -> <init>
com.jason.feick.IntrusionActivity -> com.jason.feick.IntrusionActivity:
    14:14:void <init>() -> <init>
    22:26:void onResume() -> onResume
    30:31:void onPause() -> onPause
com.jason.feick.LogActivity -> com.jason.feick.LogActivity:
    java.lang.String tag -> tag
    long lastClickTime -> lastClickTime
    8:9:void <init>() -> <init>
    14:24:boolean isFastDoubleClick() -> isFastDoubleClick
    29:30:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    34:36:void onCreate(android.os.Bundle) -> onCreate
    40:42:void onDestroy() -> onDestroy
    46:48:void onPause() -> onPause
    52:54:void onRestart() -> onRestart
    58:60:void onResume() -> onResume
    65:67:void onStart() -> onStart
    70:72:void onStop() -> onStop
com.jason.feick.MyCrashHandler -> com.jason.feick.MyCrashHandler:
    java.lang.String TAG -> TAG
    java.lang.Thread$UncaughtExceptionHandler mDefaultHandler -> mDefaultHandler
    com.jason.feick.MyCrashHandler INSTANCE -> INSTANCE
    android.content.Context mContext -> mContext
    java.util.Map infos -> infos
    java.text.DateFormat formatter -> formatter
    52:59:void <init>() -> <init>
    63:63:com.jason.feick.MyCrashHandler getInstance() -> getInstance
    72:77:void init(android.content.Context) -> init
    84:105:void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    114:141:boolean handleException(java.lang.Throwable) -> handleException
    151:174:void collectDeviceInfo(android.content.Context) -> collectDeviceInfo
    184:222:java.lang.String saveCrashInfo2File(java.lang.Throwable) -> saveCrashInfo2File
    232:258:void saveCrashInfo2DB(java.lang.Throwable) -> saveCrashInfo2DB
    40:40:android.content.Context access$000(com.jason.feick.MyCrashHandler) -> access$000
    48:48:void <clinit>() -> <clinit>
com.jason.feick.MyCrashHandler$1 -> com.jason.feick.MyCrashHandler$1:
    com.jason.feick.MyCrashHandler this$0 -> a
    118:118:void <init>(com.jason.feick.MyCrashHandler) -> <init>
    121:125:void run() -> run
com.jason.feick.R -> com.jason.feick.R:
    10:10:void <init>() -> <init>
com.jason.feick.R$anim -> com.jason.feick.R$anim:
    int fade_in -> fade_in
    int fade_out -> fade_out
    int head_in -> head_in
    int head_out -> head_out
    int hold -> hold
    int hold_long -> hold_long
    int in_lefttoright -> in_lefttoright
    int in_righttoleft -> in_righttoleft
    int inanim -> inanim
    int loading4rice -> loading4rice
    int out_lefttoright -> out_lefttoright
    int out_righttoleft -> out_righttoleft
    int outanim -> outanim
    int push_bottom_in -> push_bottom_in
    int push_buttom_out -> push_buttom_out
    int push_left_in -> push_left_in
    int push_left_out -> push_left_out
    int push_right_in -> push_right_in
    int push_right_out -> push_right_out
    int umeng_socialize_shareboard_animation_in -> umeng_socialize_shareboard_animation_in
    int umeng_socialize_shareboard_animation_out -> umeng_socialize_shareboard_animation_out
    int umeng_socialize_slide_in_from_bottom -> umeng_socialize_slide_in_from_bottom
    int umeng_socialize_slide_out_from_bottom -> umeng_socialize_slide_out_from_bottom
    11:11:void <init>() -> <init>
    12:34:void <clinit>() -> <clinit>
com.jason.feick.R$attr -> com.jason.feick.R$attr:
    36:36:void <init>() -> <init>
com.jason.feick.R$color -> com.jason.feick.R$color:
    int AppBackgroundColor -> AppBackgroundColor
    int BgColor -> BgColor
    int TextColorBlack -> TextColorBlack
    int TextColorBlue -> TextColorBlue
    int TextColorGray -> TextColorGray
    int TextColorGreen -> TextColorGreen
    int TextColorRed -> TextColorRed
    int TextColorWhite -> TextColorWhite
    int background_color -> background_color
    int clicked -> clicked
    int gl_background -> gl_background
    int gray -> gray
    int green -> green
    int home_txt -> home_txt
    int index_gray -> index_gray
    int index_pro_mose -> index_pro_mose
    int listback -> listback
    int qqblue -> qqblue
    int red -> red
    int shoppNumbackColor -> shoppNumbackColor
    int shoppNumbackWhite -> shoppNumbackWhite
    int text_color -> text_color
    int transparent -> transparent
    int white -> white
    int window_bg -> window_bg
    int yellow -> yellow
    int yellow_blue -> yellow_blue
    38:38:void <init>() -> <init>
    39:65:void <clinit>() -> <clinit>
com.jason.feick.R$drawable -> com.jason.feick.R$drawable:
    int loadpic1 -> loadpic1
    int loadpic10 -> loadpic10
    int loadpic11 -> loadpic11
    int loadpic12 -> loadpic12
    int loadpic13 -> loadpic13
    int loadpic14 -> loadpic14
    int loadpic15 -> loadpic15
    int loadpic16 -> loadpic16
    int loadpic17 -> loadpic17
    int loadpic18 -> loadpic18
    int loadpic19 -> loadpic19
    int loadpic2 -> loadpic2
    int loadpic20 -> loadpic20
    int loadpic21 -> loadpic21
    int loadpic22 -> loadpic22
    int loadpic3 -> loadpic3
    int loadpic4 -> loadpic4
    int loadpic5 -> loadpic5
    int loadpic6 -> loadpic6
    int loadpic7 -> loadpic7
    int loadpic8 -> loadpic8
    int loadpic9 -> loadpic9
    67:67:void <init>() -> <init>
    68:89:void <clinit>() -> <clinit>
com.jason.feick.R$id -> com.jason.feick.R$id:
    int auto_focus -> auto_focus
    int decode -> decode
    int decode_failed -> decode_failed
    int decode_succeeded -> decode_succeeded
    int encode_failed -> encode_failed
    int encode_succeeded -> encode_succeeded
    int launch_product_query -> launch_product_query
    int loading_data_dialog -> loading_data_dialog
    int msgBackUI -> msgBackUI
    int msgLoadList -> msgLoadList
    int msgNetNotConnected -> msgNetNotConnected
    int msgRefreshUI -> msgRefreshUI
    int msgResultFailure -> msgResultFailure
    int msgResultSuccess -> msgResultSuccess
    int msgServerError -> msgServerError
    int msgTimeOut -> msgTimeOut
    int pull_to_refresh_header -> pull_to_refresh_header
    int pull_to_refresh_image -> pull_to_refresh_image
    int pull_to_refresh_progress -> pull_to_refresh_progress
    int pull_to_refresh_text -> pull_to_refresh_text
    int pull_to_refresh_updated_at -> pull_to_refresh_updated_at
    int quit -> quit
    int restart_preview -> restart_preview
    int return_scan_result -> return_scan_result
    int search_book_contents_failed -> search_book_contents_failed
    int search_book_contents_succeeded -> search_book_contents_succeeded
    91:91:void <init>() -> <init>
    92:117:void <clinit>() -> <clinit>
com.jason.feick.R$layout -> com.jason.feick.R$layout:
    int loading -> loading
    119:119:void <init>() -> <init>
    120:120:void <clinit>() -> <clinit>
com.jason.feick.R$string -> com.jason.feick.R$string:
    int E10001 -> E10001
    int E10002 -> E10002
    int E10003 -> E10003
    int E10004 -> E10004
    int E10005 -> E10005
    int E10006 -> E10006
    int E10007 -> E10007
    int E10008 -> E10008
    int E10009 -> E10009
    int E10010 -> E10010
    int E10011 -> E10011
    int nosdcard -> nosdcard
    int text_loadingdata -> text_loadingdata
    int xlistview_footer_hint_normal -> xlistview_footer_hint_normal
    int xlistview_footer_hint_ready -> xlistview_footer_hint_ready
    int xlistview_header_hint_loading -> xlistview_header_hint_loading
    int xlistview_header_hint_normal -> xlistview_header_hint_normal
    int xlistview_header_hint_ready -> xlistview_header_hint_ready
    int xlistview_header_last_time -> xlistview_header_last_time
    122:122:void <init>() -> <init>
    123:141:void <clinit>() -> <clinit>
com.jason.feick.R$style -> com.jason.feick.R$style:
    int AnimBottom -> AnimBottom
    int defaultImgBG_pad_all3 -> defaultImgBG_pad_all3
    int dialog_fullscreen -> dialog_fullscreen
    143:143:void <init>() -> <init>
    144:146:void <clinit>() -> <clinit>
com.jason.feick.adapter.CommonAdapter -> com.jason.feick.adapter.CommonAdapter:
    android.view.LayoutInflater mInflater -> mInflater
    android.content.Context mContext -> mContext
    java.util.List mDatas -> mDatas
    int mItemLayoutId -> mItemLayoutId
    19:24:void <init>(android.content.Context,java.util.List,int) -> <init>
    29:29:int getCount() -> getCount
    35:35:java.lang.Object getItem(int) -> getItem
    41:41:long getItemId(int) -> getItemId
    47:50:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void convert(com.jason.feick.adapter.ViewHolder,java.lang.Object) -> convert
    58:58:com.jason.feick.adapter.ViewHolder getViewHolder(int,android.view.View,android.view.ViewGroup) -> getViewHolder
com.jason.feick.adapter.ViewHolder -> com.jason.feick.adapter.ViewHolder:
    android.util.SparseArray mViews -> mViews
    int mPosition -> mPosition
    android.view.View mConvertView -> mConvertView
    23:30:void <init>(android.content.Context,android.view.ViewGroup,int,int) -> <init>
    45:49:com.jason.feick.adapter.ViewHolder get(android.content.Context,android.view.View,android.view.ViewGroup,int,int) -> get
    54:54:android.view.View getConvertView() -> getConvertView
    65:71:android.view.View getView(int) -> getView
    83:85:com.jason.feick.adapter.ViewHolder setText(int,java.lang.String) -> setText
    97:100:com.jason.feick.adapter.ViewHolder setImageResource(int,int) -> setImageResource
    111:113:com.jason.feick.adapter.ViewHolder setImageBitmap(int,android.graphics.Bitmap) -> setImageBitmap
    131:131:int getPosition() -> getPosition
com.jason.feick.download.DownLoadQueue -> com.jason.feick.download.DownLoadQueue:
    long serialVersionUID -> serialVersionUID
    int id -> id
    int iconResId -> iconResId
    java.lang.String name -> name
    long downSize -> downSize
    long offSize -> offSize
    boolean isCancel -> isCancel
    java.lang.String downLoadUrl -> downLoadUrl
    java.lang.String downLoadedPath -> downLoadedPath
    java.lang.String fileName -> fileName
    java.lang.String openFileType -> openFileType
    boolean downLoadedAutoOpenFile -> downLoadedAutoOpenFile
    11:22:void <init>() -> <init>
    31:31:int getId() -> getId
    36:37:void setId(int) -> setId
    41:41:int getIconResId() -> getIconResId
    46:47:void setIconResId(int) -> setIconResId
    51:51:java.lang.String getName() -> getName
    56:57:void setName(java.lang.String) -> setName
    61:61:long getDownSize() -> getDownSize
    66:67:void setDownSize(long) -> setDownSize
    71:71:long getOffSize() -> getOffSize
    76:77:void setOffSize(long) -> setOffSize
    81:81:boolean isCancel() -> isCancel
    86:87:void setCancel(boolean) -> setCancel
    91:91:boolean isDownLoadOK() -> isDownLoadOK
    96:96:java.lang.String getDownLoadUrl() -> getDownLoadUrl
    101:102:void setDownLoadUrl(java.lang.String) -> setDownLoadUrl
    106:106:java.lang.String getDownLoadedPath() -> getDownLoadedPath
    111:112:void setDownLoadedPath(java.lang.String) -> setDownLoadedPath
    116:116:java.lang.String getFileName() -> getFileName
    121:122:void setFileName(java.lang.String) -> setFileName
    126:126:java.lang.String getOpenFileType() -> getOpenFileType
    131:132:void setOpenFileType(java.lang.String) -> setOpenFileType
    136:136:boolean isDownLoadedAutoopenFile() -> isDownLoadedAutoopenFile
    141:143:void setDownLoadedAutoOpenFile(boolean,java.lang.String) -> setDownLoadedAutoOpenFile
    147:169:void OpenFile(android.content.Context) -> OpenFile
com.jason.feick.download.DownloadAddQueueView -> com.jason.feick.download.DownloadAddQueueView:
    java.lang.String TAG -> TAG
    android.widget.LinearLayout contentView -> contentView
    java.lang.String title -> title
    com.jason.feick.download.DownLoadQueue queue -> queue
    int queue_id -> queue_id
    int queue_iconResId -> queue_iconResId
    java.lang.String queue_name -> queue_name
    java.lang.String queue_downLoadUrl -> queue_downLoadUrl
    java.lang.String queue_downLoadedPath -> queue_downLoadedPath
    boolean isToStop -> isToStop
    boolean isDownLoading -> isDownLoading
    java.lang.String openFileType -> openFileType
    boolean downLoadedAutoOpenFile -> downLoadedAutoOpenFile
    android.widget.Button btn_stop -> btn_stop
    android.widget.Button btn_cancel -> btn_cancel
    com.jason.feick.download.DownloadService$DownLoadServiceBinder binder -> binder
    android.widget.TextView tv -> tv
    java.util.Timer timer -> timer
    java.util.TimerTask timerTask -> timerTask
    android.os.Handler handler -> handler
    22:49:void <init>() -> <init>
    70:95:void onCreate(android.os.Bundle) -> onCreate
    98:106:void onDestroy() -> onDestroy
    109:147:void getIntentData() -> getIntentData
    150:189:android.view.View creatContentView() -> creatContentView
    193:214:void onClick(android.view.View) -> onClick
    217:221:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    224:225:void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    22:22:android.os.Handler access$000(com.jason.feick.download.DownloadAddQueueView) -> access$000
    22:22:com.jason.feick.download.DownLoadQueue access$100(com.jason.feick.download.DownloadAddQueueView) -> access$100
    22:22:android.widget.TextView access$200(com.jason.feick.download.DownloadAddQueueView) -> access$200
com.jason.feick.download.DownloadAddQueueView$1 -> com.jason.feick.download.DownloadAddQueueView$1:
    com.jason.feick.download.DownloadAddQueueView this$0 -> a
    43:43:void <init>(com.jason.feick.download.DownloadAddQueueView) -> <init>
    45:46:void run() -> run
com.jason.feick.download.DownloadAddQueueView$2 -> com.jason.feick.download.DownloadAddQueueView$2:
    com.jason.feick.download.DownloadAddQueueView this$0 -> a
    49:49:void <init>(com.jason.feick.download.DownloadAddQueueView) -> <init>
    51:66:void handleMessage(android.os.Message) -> handleMessage
com.jason.feick.download.DownloadService -> com.jason.feick.download.DownloadService:
    java.lang.String TAG -> TAG
    java.lang.String fileLoadingHZ -> fileLoadingHZ
    android.os.Binder serviceBinder -> serviceBinder
    android.app.NotificationManager manager -> manager
    java.util.Timer timer -> timer
    java.util.Map downLoadQueues -> downLoadQueues
    java.util.List downLoadedQueues -> downLoadedQueues
    com.jason.feick.util.SdcardHelper sdHelper -> sdHelper
    boolean isNoSdcard -> isNoSdcard
    int what_SDFreeSizeInadequate -> what_SDFreeSizeInadequate
    android.os.Handler handler -> handler
    36:51:void <init>() -> <init>
    62:63:android.os.IBinder onBind(android.content.Intent) -> onBind
    67:72:void onCreate() -> onCreate
    76:78:void onStart(android.content.Intent,int) -> onStart
    81:83:void onDestroy() -> onDestroy
    86:144:void startDownLoad(com.jason.feick.download.DownLoadQueue) -> startDownLoad
    147:165:com.jason.feick.download.DownLoadQueue addQueue(com.jason.feick.download.DownLoadQueue) -> addQueue
    169:172:java.util.List getQueueList() -> getQueueList
    176:183:void stopQueue(int) -> stopQueue
    186:218:java.io.File creatFile(java.lang.String) -> creatFile
    36:36:com.jason.feick.util.SdcardHelper access$000(com.jason.feick.download.DownloadService) -> access$000
    36:36:android.os.Handler access$100(com.jason.feick.download.DownloadService) -> access$100
    36:36:java.io.File access$200(com.jason.feick.download.DownloadService,java.lang.String) -> access$200
    36:36:java.lang.String access$300(com.jason.feick.download.DownloadService) -> access$300
    36:36:java.util.Map access$500(com.jason.feick.download.DownloadService) -> access$500
    36:36:android.app.NotificationManager access$600(com.jason.feick.download.DownloadService) -> access$600
    36:36:java.util.List access$700(com.jason.feick.download.DownloadService) -> access$700
com.jason.feick.download.DownloadService$1 -> com.jason.feick.download.DownloadService$1:
    com.jason.feick.download.DownloadService this$0 -> a
    51:51:void <init>(com.jason.feick.download.DownloadService) -> <init>
    53:58:void handleMessage(android.os.Message) -> handleMessage
com.jason.feick.download.DownloadService$2 -> com.jason.feick.download.DownloadService$2:
    com.jason.feick.download.DownLoadQueue val$queue -> a
    com.jason.feick.download.DownloadService this$0 -> b
    86:86:void <init>(com.jason.feick.download.DownloadService,com.jason.feick.download.DownLoadQueue) -> <init>
    89:140:void run() -> run
com.jason.feick.download.DownloadService$DownLoadServiceBinder -> com.jason.feick.download.DownloadService$DownLoadServiceBinder:
    com.jason.feick.download.DownloadService this$0 -> this$0
    222:223:void <init>(com.jason.feick.download.DownloadService) -> <init>
    226:226:com.jason.feick.download.DownloadService getService() -> getService
com.jason.feick.download.DownloadService$MyTimerTask -> com.jason.feick.download.DownloadService$a:
    com.jason.feick.download.DownloadService this$0 -> a
    231:232:void <init>(com.jason.feick.download.DownloadService) -> <init>
    235:236:void run() -> run
    239:264:void updataDownLoadInfo() -> a
    268:295:void updataNotify(android.content.Intent,com.jason.feick.download.DownLoadQueue,android.app.Notification) -> a
    304:313:java.lang.String getProcess(com.jason.feick.download.DownLoadQueue) -> a
    230:230:void <init>(com.jason.feick.download.DownloadService,com.jason.feick.download.DownloadService$1) -> <init>
com.jason.feick.net.CharsetUtil -> com.jason.feick.net.CharsetUtil:
    java.lang.String CHARSET_ISO_8859_1 -> CHARSET_ISO_8859_1
    java.lang.String CHARSET_GB2312 -> CHARSET_GB2312
    java.lang.String CHARSET_GBK -> CHARSET_GBK
    java.lang.String CHARSET_GB18030 -> CHARSET_GB18030
    java.lang.String CHARSET_US_ASCII -> CHARSET_US_ASCII
    java.lang.String CHARSET_ASCII -> CHARSET_ASCII
    java.lang.String CHARSET_ISO_2022_KR -> CHARSET_ISO_2022_KR
    java.lang.String CHARSET_ISO_8859_2 -> CHARSET_ISO_8859_2
    java.lang.String CHARSET_ISO_2022_JP -> CHARSET_ISO_2022_JP
    java.lang.String CHARSET_ISO_2022_JP_2 -> CHARSET_ISO_2022_JP_2
    java.lang.String CHARSET_UTF_8 -> CHARSET_UTF_8
    java.lang.String[] CHARSETS -> CHARSETS
    2:2:void <init>() -> <init>
    15:15:void <clinit>() -> <clinit>
com.jason.feick.net.GetData -> com.jason.feick.net.GetData:
    com.jason.feick.net.ResponseCallBack callBack -> callBack
    java.lang.String TAG -> TAG
    java.lang.String messageContent -> messageContent
    android.content.Context context -> context
    java.lang.String TempContent -> TempContent
    android.os.Handler handler -> handler
    86:94:void <init>(com.jason.feick.net.ResponseCallBack) -> <init>
    86:98:void <init>(android.content.Context) -> <init>
    109:168:void doGet(com.jason.feick.net.ResponseCallBack,java.lang.String,int) -> doGet
    178:257:void doPost(com.jason.feick.net.ResponseCallBack,java.lang.String,org.json.simple.JSONObject,int) -> doPost
    267:353:void doPost(com.jason.feick.net.ResponseCallBack,java.lang.String,java.lang.String,int) -> doPost
    366:367:void doPost(com.jason.feick.net.ResponseCallBack,java.lang.String,java.util.HashMap,java.lang.String,int,java.lang.String,java.lang.String) -> doPost
    383:512:void doPost(com.jason.feick.net.ResponseCallBack,java.lang.String,java.util.HashMap,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String) -> doPost
    544:559:java.lang.String encodeSignValue(java.util.HashMap) -> encodeSignValue
    563:571:org.json.simple.JSONObject encodeJsonString(java.util.HashMap) -> encodeJsonString
    584:670:void doUploadFile(com.jason.feick.net.ResponseCallBack,java.lang.String,java.io.File,org.json.simple.JSONObject,int) -> doUploadFile
    674:712:void doUpload(com.jason.feick.net.ResponseCallBack,java.lang.String,java.lang.String,int,byte[]) -> doUpload
    721:733:java.lang.String readXml(java.lang.String) -> readXml
    744:796:java.lang.String sendPost(java.lang.String,java.lang.String,int) -> sendPost
    880:916:java.lang.String map2Json1(java.util.Map) -> map2Json1
    920:932:java.lang.String listJsonMap2Json1(java.util.List) -> listJsonMap2Json1
    942:942:boolean isOk(com.jason.feick.util.MyJsonMap) -> isOk
    947:959:boolean isOk1(com.jason.feick.util.MyJsonMap) -> isOk1
    81:81:com.jason.feick.net.ResponseCallBack access$200() -> access$200
    800:800:void <clinit>() -> <clinit>
com.jason.feick.net.GetData$1 -> com.jason.feick.net.GetData$1:
    com.jason.feick.net.GetData this$0 -> a
    417:417:void <init>(com.jason.feick.net.GetData) -> <init>
    420:420:boolean verify(java.lang.String,javax.net.ssl.SSLSession) -> verify
com.jason.feick.net.GetData$2 -> com.jason.feick.net.GetData$2:
    com.jason.feick.net.GetData this$0 -> a
    548:548:void <init>(com.jason.feick.net.GetData) -> <init>
    550:550:int compare(java.util.Map$Entry,java.util.Map$Entry) -> a
    548:548:int compare(java.lang.Object,java.lang.Object) -> compare
com.jason.feick.net.GetData$3 -> com.jason.feick.net.GetData$3:
    800:800:void <init>() -> <init>
    803:875:void handleMessage(android.os.Message) -> handleMessage
com.jason.feick.net.GetData$MyHostnameVerifier -> com.jason.feick.net.GetData$a:
    com.jason.feick.net.GetData this$0 -> a
    514:514:void <init>(com.jason.feick.net.GetData) -> <init>
    518:518:boolean verify(java.lang.String,javax.net.ssl.SSLSession) -> verify
    514:514:void <init>(com.jason.feick.net.GetData,com.jason.feick.net.GetData$1) -> <init>
com.jason.feick.net.GetData$MyTrustManager -> com.jason.feick.net.GetData$b:
    com.jason.feick.net.GetData this$0 -> a
    523:523:void <init>(com.jason.feick.net.GetData) -> <init>
    528:528:void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    534:534:void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    538:538:java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    523:523:void <init>(com.jason.feick.net.GetData,com.jason.feick.net.GetData$1) -> <init>
com.jason.feick.net.GetDataConfing -> com.jason.feick.net.GetDataConfing:
    java.lang.String url -> url
    java.lang.String methodKey -> methodKey
    java.lang.String timestampKey -> timestampKey
    java.lang.String formatKey -> formatKey
    java.lang.String formatValue -> formatValue
    java.lang.String versionKey -> versionKey
    java.lang.String versionValue -> versionValue
    java.lang.String charsetKey -> charsetKey
    java.lang.String charsetValue -> charsetValue
    java.lang.String signKey -> signKey
    java.lang.String sign_methodKey -> sign_methodKey
    java.lang.String sign_methodValue -> sign_methodValue
    java.lang.String app_keyKey -> app_keyKey
    java.lang.String app_keyValue -> app_keyValue
    java.lang.String app_sessionKey -> app_sessionKey
    java.lang.String app_sessionValue -> app_sessionValue
    java.lang.String paramsKey -> paramsKey
    java.lang.String app_screen_size -> app_screen_size
    java.lang.String app_secretValue -> app_secretValue
    boolean isBussinessUrl -> isBussinessUrl
    20:20:void <init>() -> <init>
    52:55:void setAppConfig(java.lang.String,java.lang.String,java.lang.String) -> setAppConfig
    59:72:java.lang.String getUrl(android.content.Context) -> getUrl
    30:48:void <clinit>() -> <clinit>
com.jason.feick.net.GetServicesDataQueue -> com.jason.feick.net.GetServicesDataQueue:
    int gsdqId -> gsdqId
    int what -> what
    java.lang.Object tag -> tag
    boolean isGet -> isGet
    java.lang.String ip -> ip
    java.lang.String actionName -> actionName
    java.util.Map params -> params
    com.jason.feick.net.GetServicesDataUtil$IGetServicesDataCallBack callBack -> callBack
    boolean isOk -> isOk
    java.lang.String info -> info
    20:20:int getGsdqId() -> getGsdqId
    25:26:void setGsdqId(int) -> setGsdqId
    30:30:int getWhat() -> getWhat
    35:36:void setWhat(int) -> setWhat
    40:40:java.lang.Object getTag() -> getTag
    45:46:void setTag(java.lang.Object) -> setTag
    50:50:boolean isGet() -> isGet
    55:56:void setGet(boolean) -> setGet
    60:60:java.lang.String getIp() -> getIp
    65:66:void setIp(java.lang.String) -> setIp
    70:70:java.lang.String getActionName() -> getActionName
    75:76:void setActionName(java.lang.String) -> setActionName
    80:80:java.util.Map getParams() -> getParams
    85:86:void setParams(java.util.Map) -> setParams
    90:90:com.jason.feick.net.GetServicesDataUtil$IGetServicesDataCallBack getCallBack() -> getCallBack
    95:96:void setCallBack(com.jason.feick.net.GetServicesDataUtil$IGetServicesDataCallBack) -> setCallBack
    100:100:boolean isOk() -> isOk
    105:106:void setOk(boolean) -> setOk
    110:110:java.lang.String getInfo() -> getInfo
    115:116:void setInfo(java.lang.String) -> setInfo
    10:127:void <init>(int,java.lang.Object,boolean,java.lang.String,java.lang.String,java.util.Map,com.jason.feick.net.GetServicesDataUtil$IGetServicesDataCallBack) -> <init>
    10:131:void <init>() -> <init>
com.jason.feick.net.GetServicesDataRunnable -> com.jason.feick.net.GetServicesDataRunnable:
    java.lang.String TAG -> TAG
    boolean isGet -> isGet
    java.lang.String ip -> ip
    java.lang.String actionName -> actionName
    java.util.Map params -> params
    android.os.Handler handler -> handler
    int what_default_ok -> what_default_ok
    int what_default_error -> what_default_error
    int what_ok -> what_ok
    int what_error -> what_error
    int msgTag -> msgTag
    int errorNum -> errorNum
    java.lang.String charset -> charset
    org.apache.http.impl.client.DefaultHttpClient httpClient -> httpClient
    47:48:void setMsgTag(int) -> setMsgTag
    52:56:void setErrorNum(int) -> setErrorNum
    60:63:void setCharset(java.lang.String) -> setCharset
    27:77:void <init>(java.lang.String,java.lang.String,java.util.Map,android.os.Handler,boolean) -> <init>
    81:83:void <init>(java.lang.String,java.lang.String,java.util.Map,android.os.Handler,int,int,boolean) -> <init>
    87:89:void <init>(java.lang.String,java.lang.String,java.util.Map,android.os.Handler,int,boolean) -> <init>
    93:105:void initHttpClient() -> initHttpClient
    109:123:void setHttpClientTimeout(int,int) -> setHttpClientTimeout
    126:168:void run() -> run
    173:207:java.lang.String getData(int) -> getData
    213:248:java.lang.String postData(int) -> postData
com.jason.feick.net.GetServicesDataUtil -> com.jason.feick.net.GetServicesDataUtil:
    com.jason.feick.net.GetServicesDataUtil util -> util
    java.util.Map queues -> queues
    int index -> index
    int errorNum -> errorNum
    java.lang.String charset -> charset
    android.content.Context context -> context
    android.os.Handler handler -> handler
    14:40:void <init>() -> <init>
    44:47:com.jason.feick.net.GetServicesDataUtil init() -> init
    52:56:void setErrorNum(int) -> setErrorNum
    60:61:void setContext(android.content.Context) -> setContext
    65:72:void setCharset(java.lang.String) -> setCharset
    76:96:void getData(com.jason.feick.net.GetServicesDataQueue) -> getData
    11:11:java.util.Map access$000(com.jason.feick.net.GetServicesDataUtil) -> access$000
com.jason.feick.net.GetServicesDataUtil$1 -> com.jason.feick.net.GetServicesDataUtil$1:
    com.jason.feick.net.GetServicesDataUtil this$0 -> a
    22:22:void <init>(com.jason.feick.net.GetServicesDataUtil) -> <init>
    24:33:void handleMessage(android.os.Message) -> handleMessage
com.jason.feick.net.GetServicesDataUtil$IGetServicesDataCallBack -> com.jason.feick.net.GetServicesDataUtil$IGetServicesDataCallBack:
    void onLoaded(com.jason.feick.net.GetServicesDataQueue) -> onLoaded
com.jason.feick.net.GpsImagePackage -> com.jason.feick.net.GpsImagePackage:
    4:6:void <init>() -> <init>
    11:19:byte[] getPacket(java.lang.String,byte[]) -> getPacket
    26:30:byte[] InttoByteArray(int,int) -> InttoByteArray
    36:42:int BytestoInt(byte[]) -> BytestoInt
com.jason.feick.net.JsonKeys -> com.jason.feick.net.JsonKeys:
    java.lang.String Key_Code -> Key_Code
    java.lang.String Key_Msg -> Key_Msg
    java.lang.String Key_Info -> Key_Info
    java.lang.String Key_Objid -> Key_Objid
    java.lang.String Key_ObjId -> Key_ObjId
    java.lang.String Key_ObjName -> Key_ObjName
    java.lang.String Key_Objname -> Key_Objname
    java.lang.String Key_obj -> Key_obj
    java.lang.String Key_Example -> Key_Example
    12:12:void <init>() -> <init>
com.jason.feick.net.MyHttpConnection -> com.jason.feick.net.MyHttpConnection:
    org.apache.http.client.HttpClient httpClient -> httpClient
    18:19:void <init>() -> <init>
    32:32:org.apache.http.client.HttpClient getHttpClient() -> getHttpClient
    38:39:void release() -> release
    48:62:org.apache.http.client.HttpClient newHttpClient() -> newHttpClient
    21:21:void <clinit>() -> <clinit>
com.jason.feick.net.NetWorkHelper -> com.jason.feick.net.NetWorkHelper:
    13:13:void <init>() -> <init>
    15:24:boolean isNetworkConnected(android.content.Context) -> isNetworkConnected
    28:37:boolean isWifiConnected(android.content.Context) -> isWifiConnected
    41:47:boolean is3G(android.content.Context) -> is3G
    51:60:boolean is2G(android.content.Context) -> is2G
    64:73:boolean isMobileConnected(android.content.Context) -> isMobileConnected
    77:83:boolean isWifiEnabled(android.content.Context) -> isWifiEnabled
    87:96:int getConnectedType(android.content.Context) -> getConnectedType
    101:113:java.lang.String GetHostIp() -> GetHostIp
    117:119:java.lang.String getIMEI(android.content.Context) -> getIMEI
com.jason.feick.net.PropertiesUtils -> com.jason.feick.net.PropertiesUtils:
    12:12:void <init>() -> <init>
    14:24:java.lang.String getProperty(android.content.Context,java.lang.String) -> getProperty
com.jason.feick.net.ResponseCallBack -> com.jason.feick.net.ResponseCallBack:
    void response(java.lang.String,int,int) -> response
com.jason.feick.net.ThreadPoolManager -> com.jason.feick.net.ThreadPoolManager:
    int CORE_SIZE -> CORE_SIZE
    int MAX_SIZE -> MAX_SIZE
    int CAPACITY -> CAPACITY
    long KEEP_ALIVETIME -> KEEP_ALIVETIME
    java.util.concurrent.TimeUnit TIME_UNIT -> TIME_UNIT
    com.jason.feick.net.ThreadPoolManager threadPoolManager -> threadPoolManager
    java.util.concurrent.BlockingQueue queueBlock -> queueBlock
    java.util.concurrent.RejectedExecutionHandler rejectedExecutionHandler -> rejectedExecutionHandler
    java.util.concurrent.ThreadPoolExecutor execute -> execute
    14:54:void <init>() -> <init>
    68:75:com.jason.feick.net.ThreadPoolManager getInstance() -> getInstance
    84:85:void execute(java.lang.Runnable) -> execute
    91:94:void release() -> release
    39:44:void <clinit>() -> <clinit>
com.jason.feick.net.TimeOutException -> com.jason.feick.net.TimeOutException:
    long serialVersionUID -> serialVersionUID
    13:14:void <init>() -> <init>
    17:18:void <init>(java.lang.String) -> <init>
    21:22:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    25:26:void <init>(java.lang.Throwable) -> <init>
com.jason.feick.net.TwoWaysAuthenticationSSLSocketFactory -> com.jason.feick.net.TwoWaysAuthenticationSSLSocketFactory:
    java.lang.String KEY_STORE_TYPE_BKS -> KEY_STORE_TYPE_BKS
    java.lang.String KEY_STORE_TYPE_P12 -> KEY_STORE_TYPE_P12
    java.lang.String keyStoreFileName -> keyStoreFileName
    java.lang.String keyStorePassword -> keyStorePassword
    java.lang.String trustStoreFileName -> trustStoreFileName
    java.lang.String trustStorePassword -> trustStorePassword
    java.lang.String alias -> alias
    android.content.Context pContext -> pContext
    13:13:void <init>() -> <init>
    33:65:javax.net.ssl.SSLContext getSSLContext(android.content.Context) -> getSSLContext
    22:22:void <clinit>() -> <clinit>
com.jason.feick.runmethodinthread.RunMITObjectQueue -> com.jason.feick.runmethodinthread.RunMITObjectQueue:
    java.lang.Object object -> object
    3:3:void <init>() -> <init>
    9:9:boolean isStaticClass() -> isStaticClass
    14:14:java.lang.Object getObject() -> getObject
    19:20:void setObject(java.lang.Object) -> setObject
com.jason.feick.runmethodinthread.RunMITQueue -> com.jason.feick.runmethodinthread.RunMITQueue:
    int rmitqId -> rmitqId
    java.lang.String methodName -> methodName
    java.lang.Object[] parms -> parms
    com.jason.feick.runmethodinthread.RunMITUtil$IRunMITCallBack callBack -> callBack
    boolean runReslutIsOk -> runReslutIsOk
    java.lang.Object result -> result
    java.lang.Exception exception -> exception
    int what -> what
    java.lang.Object tag -> tag
    3:3:void <init>() -> <init>
    17:17:int getRmitqId() -> getRmitqId
    22:23:void setRmitqId(int) -> setRmitqId
    27:27:java.lang.String getMethodName() -> getMethodName
    32:33:void setMethodName(java.lang.String) -> setMethodName
    37:37:java.lang.Object[] getParms() -> getParms
    42:43:void setParms(java.lang.Object[]) -> setParms
    47:47:com.jason.feick.runmethodinthread.RunMITUtil$IRunMITCallBack getCallBack() -> getCallBack
    52:53:void setCallBack(com.jason.feick.runmethodinthread.RunMITUtil$IRunMITCallBack) -> setCallBack
    57:57:boolean isRunReslutIsOk() -> isRunReslutIsOk
    62:63:void setRunReslutIsOk(boolean) -> setRunReslutIsOk
    67:67:java.lang.Object getResult() -> getResult
    72:73:void setResult(java.lang.Object) -> setResult
    77:77:java.lang.Exception getException() -> getException
    82:83:void setException(java.lang.Exception) -> setException
    boolean isStaticClass() -> isStaticClass
    89:89:int getWhat() -> getWhat
    94:95:void setWhat(int) -> setWhat
    99:99:java.lang.Object getTag() -> getTag
    104:105:void setTag(java.lang.Object) -> setTag
com.jason.feick.runmethodinthread.RunMITStaticQueue -> com.jason.feick.runmethodinthread.RunMITStaticQueue:
    java.lang.Class cls -> cls
    3:3:void <init>() -> <init>
    9:9:boolean isStaticClass() -> isStaticClass
    14:14:java.lang.Class getCls() -> getCls
    19:20:void setCls(java.lang.Class) -> setCls
com.jason.feick.runmethodinthread.RunMITUtil -> com.jason.feick.runmethodinthread.RunMITUtil:
    com.jason.feick.runmethodinthread.RunMITUtil util -> util
    java.util.Map queues -> queues
    int index -> index
    int what_ok -> what_ok
    int what_error -> what_error
    android.os.Handler handler -> handler
    22:53:void <init>() -> <init>
    57:60:com.jason.feick.runmethodinthread.RunMITUtil init() -> init
    65:71:void runQueue(com.jason.feick.runmethodinthread.RunMITQueue) -> runQueue
    19:19:java.util.Map access$000(com.jason.feick.runmethodinthread.RunMITUtil) -> access$000
    19:19:android.os.Handler access$100(com.jason.feick.runmethodinthread.RunMITUtil) -> access$100
com.jason.feick.runmethodinthread.RunMITUtil$1 -> com.jason.feick.runmethodinthread.RunMITUtil$1:
    com.jason.feick.runmethodinthread.RunMITUtil this$0 -> a
    30:30:void <init>(com.jason.feick.runmethodinthread.RunMITUtil) -> <init>
    32:46:void handleMessage(android.os.Message) -> handleMessage
com.jason.feick.runmethodinthread.RunMITUtil$IRunMITCallBack -> com.jason.feick.runmethodinthread.RunMITUtil$IRunMITCallBack:
    void onRuned(com.jason.feick.runmethodinthread.RunMITQueue) -> onRuned
com.jason.feick.runmethodinthread.RunMITUtil$RunMetodInThread -> com.jason.feick.runmethodinthread.RunMITUtil$a:
    java.lang.String TAG -> b
    com.jason.feick.runmethodinthread.RunMITQueue queue -> c
    com.jason.feick.runmethodinthread.RunMITUtil this$0 -> a
    80:86:void <init>(com.jason.feick.runmethodinthread.RunMITUtil,com.jason.feick.runmethodinthread.RunMITQueue) -> <init>
    90:135:void run() -> run
    140:177:java.lang.reflect.Method searchClassMethod(java.lang.Class,java.lang.String,java.lang.Class[]) -> a
    182:209:boolean checkTypeEquals(java.lang.Class,java.lang.Class) -> a
    214:226:java.lang.String argumentTypesToString(java.lang.Class[]) -> a
com.jason.feick.runmethodinthread.old.IRunMetodInThreadCallBack -> com.jason.feick.runmethodinthread.old.IRunMetodInThreadCallBack:
    void onError(java.lang.Exception) -> onError
    void onSucess(java.lang.Object) -> onSucess
com.jason.feick.runmethodinthread.old.RunMethodInThreadUtil -> com.jason.feick.runmethodinthread.old.RunMethodInThreadUtil:
    java.lang.String TAG -> TAG
    java.lang.String methodName -> methodName
    java.lang.Object object -> object
    java.lang.Object[] parms -> parms
    com.jason.feick.runmethodinthread.old.IRunMetodInThreadCallBack callBack -> callBack
    android.os.Handler handler -> handler
    int what_ok -> what_ok
    int what_error -> what_error
    boolean isRuning -> isRuning
    13:35:void <init>() -> <init>
    40:48:void run(java.lang.String,java.lang.Object,java.lang.Object[],com.jason.feick.runmethodinthread.old.IRunMetodInThreadCallBack) -> run
    11:11:com.jason.feick.runmethodinthread.old.IRunMetodInThreadCallBack access$000(com.jason.feick.runmethodinthread.old.RunMethodInThreadUtil) -> access$000
    11:11:boolean access$202(com.jason.feick.runmethodinthread.old.RunMethodInThreadUtil,boolean) -> access$202
    11:11:java.lang.Object[] access$300(com.jason.feick.runmethodinthread.old.RunMethodInThreadUtil) -> access$300
    11:11:java.lang.String access$400(com.jason.feick.runmethodinthread.old.RunMethodInThreadUtil) -> access$400
    11:11:java.lang.Object access$500(com.jason.feick.runmethodinthread.old.RunMethodInThreadUtil) -> access$500
    11:11:android.os.Handler access$600(com.jason.feick.runmethodinthread.old.RunMethodInThreadUtil) -> access$600
    11:11:java.lang.String access$700(com.jason.feick.runmethodinthread.old.RunMethodInThreadUtil) -> access$700
com.jason.feick.runmethodinthread.old.RunMethodInThreadUtil$1 -> com.jason.feick.runmethodinthread.old.RunMethodInThreadUtil$1:
    com.jason.feick.runmethodinthread.old.RunMethodInThreadUtil this$0 -> a
    26:26:void <init>(com.jason.feick.runmethodinthread.old.RunMethodInThreadUtil) -> <init>
    28:33:void handleMessage(android.os.Message) -> handleMessage
com.jason.feick.runmethodinthread.old.RunMethodInThreadUtil$RunMethodInThread -> com.jason.feick.runmethodinthread.old.RunMethodInThreadUtil$a:
    com.jason.feick.runmethodinthread.old.RunMethodInThreadUtil this$0 -> a
    53:54:void <init>(com.jason.feick.runmethodinthread.old.RunMethodInThreadUtil) -> <init>
    58:84:void run() -> run
    50:50:void <init>(com.jason.feick.runmethodinthread.old.RunMethodInThreadUtil,com.jason.feick.runmethodinthread.old.RunMethodInThreadUtil$1) -> <init>
com.jason.feick.runmethodinthread.old.ThreadRunMethodThread -> com.jason.feick.runmethodinthread.old.ThreadRunMethodThread:
    java.lang.String TAG -> TAG
    java.lang.String methodName -> methodName
    java.lang.Object object -> object
    java.lang.Object[] parms -> parms
    android.os.Handler handler -> handler
    int what_error -> what_error
    int what_ok -> what_ok
    13:30:void <init>(java.lang.String,java.lang.Object,java.lang.Object[],android.os.Handler,int,int) -> <init>
    34:73:void run() -> run
com.jason.feick.task.MyTask -> com.jason.feick.task.MyTask:
    com.jason.feick.net.ResponseCallBack callBack -> callBack
    java.util.HashMap par -> par
    java.lang.String use -> use
    java.lang.String function -> function
    java.lang.String userId -> userId
    int mark -> mark
    java.lang.String token -> token
    com.jason.feick.net.GetData getData -> getData
    android.content.Context context -> context
    25:35:void <init>(android.content.Context,com.jason.feick.net.ResponseCallBack,java.util.HashMap,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String) -> <init>
    41:43:void run() -> run
    49:49:java.lang.String toString() -> toString
    53:56:void log() -> log
    60:60:com.jason.feick.net.ResponseCallBack getCallBack() -> getCallBack
    64:65:void setCallBack(com.jason.feick.net.ResponseCallBack) -> setCallBack
    68:68:java.util.HashMap getPar() -> getPar
    72:73:void setPar(java.util.HashMap) -> setPar
    76:76:java.lang.String getUse() -> getUse
    80:81:void setUse(java.lang.String) -> setUse
    84:84:java.lang.String getFunction() -> getFunction
    88:89:void setFunction(java.lang.String) -> setFunction
    92:92:int getMark() -> getMark
    96:97:void setMark(int) -> setMark
    100:100:com.jason.feick.net.GetData getGetData() -> getGetData
    104:105:void setGetData(com.jason.feick.net.GetData) -> setGetData
com.jason.feick.task.TaskManager -> com.jason.feick.task.TaskManager:
    10:10:void <init>() -> <init>
    15:18:com.jason.feick.task.MyTask getConfigure(android.content.Context,com.jason.feick.net.ResponseCallBack,java.lang.String,java.util.HashMap,int,java.lang.String,java.lang.String) -> getConfigure
    31:34:void startGetAppVersionTask(android.content.Context,com.jason.feick.net.ResponseCallBack,java.util.HashMap,int,java.lang.String,java.lang.String) -> startGetAppVersionTask
    44:47:com.jason.feick.task.MyTask startGetPhoneCodeByPhoneTask(android.content.Context,com.jason.feick.net.ResponseCallBack,java.util.HashMap,int,java.lang.String,java.lang.String) -> startGetPhoneCodeByPhoneTask
    59:62:com.jason.feick.task.MyTask startLoginTask(android.content.Context,com.jason.feick.net.ResponseCallBack,java.util.HashMap,int,java.lang.String,java.lang.String) -> startLoginTask
    74:77:com.jason.feick.task.MyTask startGetMerchantInfo(android.content.Context,com.jason.feick.net.ResponseCallBack,java.util.HashMap,int,java.lang.String,java.lang.String) -> startGetMerchantInfo
    90:93:com.jason.feick.task.MyTask startSaveMerchantInfoTask(android.content.Context,com.jason.feick.net.ResponseCallBack,java.util.HashMap,int,java.lang.String,java.lang.String) -> startSaveMerchantInfoTask
    104:109:com.jason.feick.task.MyTask startGetMerchantTypesTask(android.content.Context,com.jason.feick.net.ResponseCallBack,int,java.lang.String,java.lang.String) -> startGetMerchantTypesTask
    121:124:com.jason.feick.task.MyTask startCustomerSubmitOrderTask(android.content.Context,com.jason.feick.net.ResponseCallBack,java.util.HashMap,int,java.lang.String,java.lang.String) -> startCustomerSubmitOrderTask
    136:139:com.jason.feick.task.MyTask startGetCustomerOrdersTask(android.content.Context,com.jason.feick.net.ResponseCallBack,java.util.HashMap,int,java.lang.String,java.lang.String) -> startGetCustomerOrdersTask
    151:154:com.jason.feick.task.MyTask startCustomerCancelOrderTask(android.content.Context,com.jason.feick.net.ResponseCallBack,java.util.HashMap,int,java.lang.String,java.lang.String) -> startCustomerCancelOrderTask
    166:169:com.jason.feick.task.MyTask startCustomerConfirmOrderTask(android.content.Context,com.jason.feick.net.ResponseCallBack,java.util.HashMap,int,java.lang.String,java.lang.String) -> startCustomerConfirmOrderTask
com.jason.feick.upgrade.IVersionSelectedCallBack -> com.jason.feick.upgrade.IVersionSelectedCallBack:
    boolean isUpdate(java.lang.String,java.lang.String,int) -> isUpdate
    void netError(java.lang.String) -> netError
com.jason.feick.upgrade.VersionUpdateUtil -> com.jason.feick.upgrade.VersionUpdateUtil:
    java.lang.String TAG -> TAG
    android.content.Context context -> context
    com.jason.feick.upgrade.IVersionSelectedCallBack callBack -> callBack
    com.jason.feick.net.GetServicesDataUtil dataUtil -> dataUtil
    java.util.Timer timer -> timer
    int VersionUpdate -> VersionUpdate
    com.jason.feick.net.GetServicesDataUtil$IGetServicesDataCallBack getDataCallBack -> getDataCallBack
    int what_delayDownload -> what_delayDownload
    android.os.Handler handler -> handler
    23:59:void <init>(android.content.Context) -> <init>
    63:63:com.jason.feick.upgrade.VersionUpdateUtil init(android.content.Context) -> init
    68:82:void doSelectVersion(java.lang.String,java.lang.String,java.util.Map,boolean,com.jason.feick.upgrade.IVersionSelectedCallBack) -> doSelectVersion
    86:106:void doUpdateVersion(java.lang.String,java.lang.String,java.lang.String,int,boolean) -> doUpdateVersion
    112:119:void addDownloadQueue(com.jason.feick.download.DownLoadQueue) -> addDownloadQueue
    123:132:android.content.pm.PackageInfo getPackageInfo() -> getPackageInfo
    137:141:java.lang.String getVersionName() -> getVersionName
    146:150:int getVersionCode() -> getVersionCode
    155:160:void updateAPPVersion(java.lang.String) -> updateAPPVersion
    21:21:com.jason.feick.upgrade.IVersionSelectedCallBack access$000(com.jason.feick.upgrade.VersionUpdateUtil) -> access$000
    21:21:void access$100(com.jason.feick.upgrade.VersionUpdateUtil,com.jason.feick.download.DownLoadQueue) -> access$100
    21:21:java.util.Timer access$200(com.jason.feick.upgrade.VersionUpdateUtil) -> access$200
    21:21:java.util.Timer access$202(com.jason.feick.upgrade.VersionUpdateUtil,java.util.Timer) -> access$202
    21:21:android.os.Handler access$300(com.jason.feick.upgrade.VersionUpdateUtil) -> access$300
com.jason.feick.upgrade.VersionUpdateUtil$1 -> com.jason.feick.upgrade.VersionUpdateUtil$1:
    com.jason.feick.upgrade.VersionUpdateUtil this$0 -> a
    30:30:void <init>(com.jason.feick.upgrade.VersionUpdateUtil) -> <init>
    33:38:void onLoaded(com.jason.feick.net.GetServicesDataQueue) -> onLoaded
com.jason.feick.upgrade.VersionUpdateUtil$2 -> com.jason.feick.upgrade.VersionUpdateUtil$2:
    com.jason.feick.upgrade.VersionUpdateUtil this$0 -> a
    43:43:void <init>(com.jason.feick.upgrade.VersionUpdateUtil) -> <init>
    45:53:void handleMessage(android.os.Message) -> handleMessage
com.jason.feick.upgrade.VersionUpdateUtil$DelayDownloadTimerTask -> com.jason.feick.upgrade.VersionUpdateUtil$a:
    com.jason.feick.download.DownLoadQueue queue -> b
    com.jason.feick.upgrade.VersionUpdateUtil this$0 -> a
    167:169:void <init>(com.jason.feick.upgrade.VersionUpdateUtil,com.jason.feick.download.DownLoadQueue) -> <init>
    173:176:void run() -> run
com.jason.feick.util.AndroidUtils -> com.jason.feick.util.AndroidUtils:
    16:16:void <init>() -> <init>
    25:28:int getAppVersionCode(android.content.Context) -> getAppVersionCode
    39:42:java.lang.String getAppVersionName(android.content.Context) -> getAppVersionName
    53:58:java.lang.String getDeviceID(android.content.Context) -> getDeviceID
    62:66:void call(android.content.Context,java.lang.String) -> call
    69:71:void dowloadBySystem(android.content.Context,java.lang.String) -> dowloadBySystem
    74:76:void showSoftPad(android.widget.EditText) -> showSoftPad
com.jason.feick.util.CharsetUtils -> com.jason.feick.util.CharsetUtils:
    java.lang.String TAG -> TAG
    java.lang.String DEFAULT_ENCODING_CHARSET -> DEFAULT_ENCODING_CHARSET
    java.util.List SUPPORT_CHARSET -> SUPPORT_CHARSET
    7:7:void <init>() -> <init>
    37:41:java.lang.String toCharset(java.lang.String,java.lang.String,int) -> toCharset
    46:53:java.lang.String getEncoding(java.lang.String,int) -> getEncoding
    59:63:boolean isCharset(java.lang.String,java.lang.String,int) -> isCharset
    9:31:void <clinit>() -> <clinit>
com.jason.feick.util.Confing -> com.jason.feick.util.Confing:
    java.lang.String SP_SaveUserInfo -> SP_SaveUserInfo
    java.lang.String SP_SaveUserInfo_Name -> SP_SaveUserInfo_Name
    java.lang.String SP_SaveUserInfo_Id -> SP_SaveUserInfo_Id
    java.lang.String SP_SaveUserInfo_Token -> SP_SaveUserInfo_Token
    java.lang.String SP_SaveGuidance -> SP_SaveGuidance
    java.lang.String productPath -> productPath
    java.lang.String dbPath -> dbPath
    java.lang.String imgCache -> imgCache
    java.lang.String voiceCache -> voiceCache
    java.lang.String PayNotifyUrl -> PayNotifyUrl
    java.lang.String PayPartnerID -> PayPartnerID
    java.lang.String PaySellerNo -> PaySellerNo
    java.lang.String PayPrivateKey -> PayPrivateKey
    java.lang.String RSA_ALIPAY_PUBLIC -> RSA_ALIPAY_PUBLIC
    int ValidationCodeEffectionTime -> ValidationCodeEffectionTime
    int PageSize -> PageSize
    13:13:void <init>() -> <init>
    41:81:void <clinit>() -> <clinit>
com.jason.feick.util.DateUtil -> com.jason.feick.util.DateUtil:
    java.lang.String mYear -> mYear
    java.lang.String mMonth -> mMonth
    java.lang.String mDay -> mDay
    java.lang.String mWay -> mWay
    13:13:void <init>() -> <init>
    20:41:java.lang.String StringData() -> StringData
    45:63:java.util.Map getInOutDate() -> getInOutDate
com.jason.feick.util.DisplayUtil -> com.jason.feick.util.DisplayUtil:
    java.lang.String tag -> tag
    14:14:void <init>() -> <init>
    25:26:int px2dip(android.content.Context,float) -> px2dip
    37:38:int dip2px(android.content.Context,float) -> dip2px
    50:51:int px2sp(android.content.Context,float) -> px2sp
    63:64:int sp2px(android.content.Context,float) -> sp2px
    68:70:int getScreenWidth(android.content.Context) -> getScreenWidth
    74:79:int getScreenHeight(android.app.Activity) -> getScreenHeight
    83:91:java.lang.String getPhoneSize(android.content.Context) -> getPhoneSize
    15:15:void <clinit>() -> <clinit>
com.jason.feick.util.ExtraKeys -> com.jason.feick.util.ExtraKeys:
    java.lang.String Key_Msg1 -> Key_Msg1
    java.lang.String Key_Msg2 -> Key_Msg2
    java.lang.String Key_Msg3 -> Key_Msg3
    java.lang.String Key_Msg4 -> Key_Msg4
    java.lang.String Key_Msg5 -> Key_Msg5
    java.lang.String Key_Msg6 -> Key_Msg6
    java.lang.String Key_Msg7 -> Key_Msg7
    12:12:void <init>() -> <init>
com.jason.feick.util.FileUtil -> com.jason.feick.util.FileUtil:
    java.lang.String SDPATH -> SDPATH
    12:12:void <init>() -> <init>
    25:25:boolean getExernalState() -> getExernalState
    37:38:boolean mkdir(java.lang.String) -> mkdir
    48:56:java.lang.String getFileNameFromUrl(java.lang.String) -> getFileNameFromUrl
    66:74:java.lang.String getFileUrl(java.lang.String) -> getFileUrl
    81:89:java.lang.String[] getFileNameArray(java.lang.String) -> getFileNameArray
    93:100:java.lang.String getSDPath() -> getSDPath
    16:17:void <clinit>() -> <clinit>
com.jason.feick.util.IDCardUtil -> com.jason.feick.util.IDCardUtil:
    java.util.Map zoneNum -> zoneNum
    int[] PARITYBIT -> PARITYBIT
    int[] POWER_LIST -> POWER_LIST
    27:27:void <init>() -> <init>
    76:119:boolean isIDCard(java.lang.String) -> isIDCard
    123:126:int getIdcardCalendar() -> getIdcardCalendar
    132:134:void main(java.lang.String[]) -> main
    28:67:void <clinit>() -> <clinit>
com.jason.feick.util.JsonMapOrListJsonMap2JsonUtil -> com.jason.feick.util.JsonMapOrListJsonMap2JsonUtil:
    long serialVersionUID -> serialVersionUID
    10:10:void <init>() -> <init>
    17:45:java.lang.String map2Json(java.util.Map) -> map2Json
    50:61:java.lang.String listJsonMap2Json(java.util.List) -> listJsonMap2Json
com.jason.feick.util.JsonParseHelper -> com.jason.feick.util.JsonParseHelper:
    java.lang.String TAG -> TAG
    15:15:void <init>() -> <init>
    21:34:java.lang.String getAttribute(java.lang.String,java.lang.String[]) -> getAttribute
    39:55:java.lang.String getAttribute(java.lang.String,int[],java.lang.String) -> getAttribute
    63:76:java.util.Map getMap(java.lang.String) -> getMap
    81:94:java.util.List getList(java.lang.String) -> getList
    99:101:java.util.Map getMap_Map(java.lang.String,java.lang.String) -> getMap_Map
    106:106:java.util.List getMap_List(java.lang.String,java.lang.String) -> getMap_List
    111:111:java.util.List getMap_Map_List(java.lang.String,java.lang.String,java.lang.String) -> getMap_Map_List
    119:132:com.jason.feick.util.MyJsonMap getJsonMap(java.lang.String) -> getJsonMap
    137:150:java.util.List getList_JsonMap(java.lang.String) -> getList_JsonMap
    155:157:com.jason.feick.util.MyJsonMap getJsonMap_JsonMap(java.lang.String,java.lang.String) -> getJsonMap_JsonMap
    162:162:java.util.List getJsonMap_List_JsonMap(java.lang.String,java.lang.String) -> getJsonMap_List_JsonMap
    167:167:java.util.List getJsonMap_JsonMap_List_JsonMap(java.lang.String,java.lang.String,java.lang.String) -> getJsonMap_JsonMap_List_JsonMap
com.jason.feick.util.LogUtil -> com.jason.feick.util.LogUtil:
    boolean debug -> debug
    13:13:void <init>() -> <init>
    18:19:void setDebug(boolean) -> setDebug
    27:31:void Log(android.content.Context,java.lang.String,java.lang.String) -> Log
    39:46:void Log(java.lang.String,java.lang.String) -> Log
    58:58:void showToast(android.content.Context,java.lang.String) -> showToast
    61:64:void Log(java.lang.String,java.lang.String,java.lang.Exception) -> Log
    15:15:void <clinit>() -> <clinit>
com.jason.feick.util.LogUtils -> com.jason.feick.util.LogUtils:
    java.lang.String Tag -> Tag
    boolean isDebug -> isDebug
    8:8:void <init>() -> <init>
    14:15:void setDebugMode(boolean) -> setDebugMode
    18:22:void e(java.lang.String) -> e
    25:28:void i(java.lang.String) -> i
    31:34:void v(java.lang.String) -> v
    37:40:void d(java.lang.String) -> d
    11:11:void <clinit>() -> <clinit>
com.jason.feick.util.MyJsonMap -> com.jason.feick.util.MyJsonMap:
    long serialVersionUID -> serialVersionUID
    7:7:void <init>() -> <init>
    14:20:java.lang.String getString(java.lang.Object) -> getString
    25:31:java.lang.String getString(java.lang.Object,java.lang.String) -> getString
    36:36:java.lang.String getStringNoNull(java.lang.String) -> getStringNoNull
    41:42:java.lang.String getStringNoNull(java.lang.String,java.lang.String) -> getStringNoNull
    47:53:java.lang.String getStr(java.lang.Object) -> getStr
    58:58:int getInt(java.lang.Object) -> getInt
    63:69:int getInt(java.lang.Object,int) -> getInt
    74:74:float getFloat(java.lang.Object) -> getFloat
    79:85:float getFloat(java.lang.Object,float) -> getFloat
    90:96:java.lang.Long getLong(java.lang.Object,java.lang.Long) -> getLong
    101:101:java.lang.Long getLong(java.lang.Object) -> getLong
    107:107:double getDouble(java.lang.Object) -> getDouble
    112:118:double getDouble(java.lang.Object,double) -> getDouble
    123:123:boolean getBoolean(java.lang.Object) -> getBoolean
    128:134:boolean getBoolean(java.lang.Object,boolean) -> getBoolean
    139:141:com.jason.feick.util.MyJsonMap getJsonMap(java.lang.Object) -> getJsonMap
    146:146:java.util.List getList_JsonMap(java.lang.Object) -> getList_JsonMap
    151:154:java.lang.String toJson() -> toJson
    159:159:java.lang.Object clone() -> clone
com.jason.feick.util.ProgressGet100Util -> com.jason.feick.util.ProgressGet100Util:
    3:3:void <init>() -> <init>
    7:7:java.lang.String get100Progress(long,long) -> get100Progress
    12:12:java.lang.String get100_0Progress(long,long) -> get100_0Progress
    17:17:java.lang.String get100_00Progress(long,long) -> get100_00Progress
    22:22:java.lang.String get100_000Progress(long,long) -> get100_000Progress
    27:27:java.lang.String get100_0000Progress(long,long) -> get100_0000Progress
    32:46:java.lang.String get100_n_0Progress(long,long,int) -> get100_n_0Progress
    51:54:java.lang.String strEndAdd0(java.lang.String,int) -> strEndAdd0
com.jason.feick.util.SdcardHelper -> com.jason.feick.util.SdcardHelper:
    8:8:void <init>() -> <init>
    12:16:boolean ExistSDCard() -> ExistSDCard
    21:28:long getSDFreeSize() -> getSDFreeSize
    33:40:long getSDAllSize() -> getSDAllSize
com.jason.feick.util.StringUtil -> com.jason.feick.util.StringUtil:
    java.lang.String tag -> tag
    double EARTH_RADIUS -> EARTH_RADIUS
    java.util.GregorianCalendar calendar -> calendar
    27:27:void <init>() -> <init>
    35:38:boolean isMobileNO(java.lang.String) -> isMobileNO
    47:49:boolean isPassWord(java.lang.String) -> isPassWord
    58:60:boolean isWaybillNumber(java.lang.String) -> isWaybillNumber
    69:72:boolean getEmail(java.lang.String) -> getEmail
    81:84:boolean isHaveChineseChar(java.lang.String) -> isHaveChineseChar
    95:97:java.lang.String getPhoneNumber(android.content.Context) -> getPhoneNumber
    108:116:java.lang.String GetHostIp(android.content.Context) -> GetHostIp
    130:146:java.lang.String intToIp(android.content.Context) -> intToIp
    153:162:java.lang.String detectionMesh(android.content.Context) -> detectionMesh
    172:174:java.lang.String getSubscriberId(android.content.Context) -> getSubscriberId
    183:186:java.lang.String getData() -> getData
    196:200:java.lang.String getData_yyyy_MM_dd_hh_mm_ss() -> getData_yyyy_MM_dd_hh_mm_ss
    213:230:boolean compareDate(java.lang.String,java.lang.String) -> compareDate
    239:242:java.lang.String getData_yyyy_MM_dd() -> getData_yyyy_MM_dd
    252:259:java.lang.String getThreeData_yyyy_MM_dd(int) -> getThreeData_yyyy_MM_dd
    268:271:int getData_HH() -> getData_HH
    280:283:int getData_mm() -> getData_mm
    294:304:long compare_date(java.lang.String,java.lang.String) -> compare_date
    314:318:long getAvailaleSize() -> getAvailaleSize
    333:338:long getAllSize() -> getAllSize
    345:346:long getCompareSize() -> getCompareSize
    353:357:int judgeExpressDB() -> judgeExpressDB
    361:361:double rad(double) -> rad
    375:384:double GetDistance(double,double,double,double) -> GetDistance
    400:402:long getMillis(java.lang.String) -> getMillis
    417:419:long getMillis(int,int,int) -> getMillis
    436:442:long getMillis(java.lang.String,java.lang.String,java.lang.String) -> getMillis
    454:456:long getNow() -> getNow
    469:471:java.lang.String getDate(long) -> getDate
    484:486:int getYear(long) -> getYear
    499:501:int getMonth(long) -> getMonth
    514:516:int getDay(long) -> getDay
    529:531:int getHour(long) -> getHour
    544:546:int getMinute(long) -> getMinute
    559:561:int getSecond(long) -> getSecond
    573:573:java.lang.String getTodayData() -> getTodayData
    587:587:java.lang.String getTomoData() -> getTomoData
    599:599:java.lang.String getTheDayData() -> getTheDayData
    28:389:void <clinit>() -> <clinit>
com.jason.feick.util.SubstituteEncrypt -> com.jason.feick.util.SubstituteEncrypt:
    java.lang.String KEY -> KEY
    char[] letterMap -> letterMap
    int n -> n
    com.jason.feick.util.SubstituteEncrypt instance -> instance
    15:39:java.lang.String md5(java.lang.String) -> md5
    53:56:void <init>() -> <init>
    58:61:com.jason.feick.util.SubstituteEncrypt getInstance() -> getInstance
    68:81:java.lang.String encrypt(java.lang.String) -> encrypt
    88:101:java.lang.String decrypt(java.lang.String) -> decrypt
    105:105:char getLetter(int) -> getLetter
    110:116:int getLetterPosition(char) -> getLetterPosition
    120:125:int getAsciiNum(java.lang.String) -> getAsciiNum
    47:55:void <clinit>() -> <clinit>
com.jason.feick.util.ToastUtil -> com.jason.feick.util.ToastUtil:
    java.lang.String TAG -> TAG
    com.jason.feick.util.ToastUtil toastUtil -> toastUtil
    android.widget.Toast toast -> toast
    android.content.Context context -> context
    java.util.Timer timer -> timer
    com.jason.feick.util.ToastUtil$ToHideTimerTask task -> task
    java.lang.Object obj -> obj
    int what_toHide -> what_toHide
    android.os.Handler handler -> handler
    java.lang.Object[] objects -> objects
    20:104:void <init>(android.content.Context) -> <init>
    54:57:com.jason.feick.util.ToastUtil initToast(android.app.Activity) -> initToast
    62:62:android.widget.Toast getToast() -> getToast
    67:71:void showToast(java.lang.String) -> showToast
    74:75:void setGravity(int,int,int) -> setGravity
    78:87:void showToast() -> showToast
    91:92:void showToast(int) -> showToast
    96:102:void hideToast() -> hideToast
    109:120:void myShow() -> myShow
    126:131:void myHide() -> myHide
    17:17:void access$000(com.jason.feick.util.ToastUtil) -> access$000
    17:17:android.os.Handler access$200(com.jason.feick.util.ToastUtil) -> access$200
com.jason.feick.util.ToastUtil$1 -> com.jason.feick.util.ToastUtil$1:
    com.jason.feick.util.ToastUtil this$0 -> a
    30:30:void <init>(com.jason.feick.util.ToastUtil) -> <init>
    32:33:void handleMessage(android.os.Message) -> handleMessage
com.jason.feick.util.ToastUtil$ToHideTimerTask -> com.jason.feick.util.ToastUtil$a:
    com.jason.feick.util.ToastUtil this$0 -> a
    134:135:void <init>(com.jason.feick.util.ToastUtil) -> <init>
    138:139:void run() -> run
    133:133:void <init>(com.jason.feick.util.ToastUtil,com.jason.feick.util.ToastUtil$1) -> <init>
com.jason.feick.widget.AsyImgConfig -> com.jason.feick.widget.AsyImgConfig:
    int imgFileSizeMaxValue -> imgFileSizeMaxValue
    boolean isCheckImgFileSizeMax -> isCheckImgFileSizeMax
    java.lang.String appImgsFilesPath -> appImgsFilesPath
    com.jason.feick.widget.LruMemoryCache imgsCache -> imgsCache
    boolean autoCreatScaled -> autoCreatScaled
    10:10:void <init>() -> <init>
    22:23:void init(boolean,int) -> init
    27:28:void init(boolean,int,boolean) -> init
    32:50:void init(boolean,int,java.lang.String,boolean) -> init
    54:55:void init(boolean,java.lang.String) -> init
    59:60:void init(java.lang.String) -> init
    64:65:void init(int,java.lang.String) -> init
    69:70:void init(boolean) -> init
    74:75:void init(int) -> init
    79:80:void clearCache() -> clearCache
    12:18:void <clinit>() -> <clinit>
com.jason.feick.widget.AsyImgFileCacheUtil -> com.jason.feick.widget.AsyImgFileCacheUtil:
    3:3:void <init>() -> <init>
    7:9:java.lang.String imgPathToFilePath_PNG(java.lang.String) -> imgPathToFilePath_PNG
    14:34:java.lang.String imgPathToFilePath(java.lang.String) -> imgPathToFilePath
com.jason.feick.widget.AsyImgView -> com.jason.feick.widget.AsyImgView:
    java.lang.String TAG -> TAG
    java.lang.String imgurl -> imgurl
    int defaultResource -> defaultResource
    java.lang.String fliesPath -> fliesPath
    22:29:void <init>(android.content.Context) -> <init>
    22:33:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    22:38:void <init>(android.content.Context,int) -> <init>
    22:43:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    46:47:void setDefaultResource(int) -> setDefaultResource
    50:51:void setFliesPath(java.lang.String) -> setFliesPath
    54:70:void setImgUrl(java.lang.String) -> setImgUrl
    73:108:void reLoad() -> reLoad
    21:21:java.lang.String access$000(com.jason.feick.widget.AsyImgView) -> access$000
    21:21:java.lang.String access$100(com.jason.feick.widget.AsyImgView) -> access$100
    21:21:int access$200(com.jason.feick.widget.AsyImgView) -> access$200
    21:21:java.lang.String access$300(com.jason.feick.widget.AsyImgView) -> access$300
com.jason.feick.widget.AsyImgView$GetDataTask -> com.jason.feick.widget.AsyImgView$a:
    android.graphics.Bitmap bitmap -> b
    java.lang.String imgUrl -> c
    com.jason.feick.widget.AsyImgFileCacheUtil util -> d
    com.jason.feick.widget.AsyImgView this$0 -> a
    115:118:void <init>(com.jason.feick.widget.AsyImgView,java.lang.String) -> <init>
    121:136:void onPostExecute(java.lang.String) -> a
    139:140:void onPreExecute() -> onPreExecute
    143:284:java.lang.String doInBackground(java.lang.Void[]) -> a
    110:110:void onPostExecute(java.lang.Object) -> onPostExecute
    110:110:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.jason.feick.widget.BPUtil -> com.jason.feick.widget.BPUtil:
    char[] CHARS -> CHARS
    com.jason.feick.widget.BPUtil bpUtil -> bpUtil
    int DEFAULT_CODE_LENGTH -> DEFAULT_CODE_LENGTH
    int DEFAULT_FONT_SIZE -> DEFAULT_FONT_SIZE
    int DEFAULT_LINE_NUMBER -> DEFAULT_LINE_NUMBER
    int BASE_PADDING_LEFT -> BASE_PADDING_LEFT
    int RANGE_PADDING_LEFT -> RANGE_PADDING_LEFT
    int BASE_PADDING_TOP -> BASE_PADDING_TOP
    int RANGE_PADDING_TOP -> RANGE_PADDING_TOP
    int DEFAULT_WIDTH -> DEFAULT_WIDTH
    int DEFAULT_HEIGHT -> DEFAULT_HEIGHT
    int width -> width
    int height -> height
    int base_padding_left -> base_padding_left
    int range_padding_left -> range_padding_left
    int base_padding_top -> base_padding_top
    int range_padding_top -> range_padding_top
    int codeLength -> codeLength
    int line_number -> line_number
    int font_size -> font_size
    java.lang.String code -> code
    int padding_left -> padding_left
    int padding_top -> padding_top
    java.util.Random random -> random
    9:62:void <init>() -> <init>
    23:24:com.jason.feick.widget.BPUtil getInstance() -> getInstance
    65:88:android.graphics.Bitmap createBitmap() -> createBitmap
    92:92:java.lang.String getCode() -> getCode
    96:100:java.lang.String createCode() -> createCode
    104:112:void drawLine(android.graphics.Canvas,android.graphics.Paint) -> drawLine
    115:115:int randomColor() -> randomColor
    119:122:int randomColor(int) -> randomColor
    127:136:void randomTextStyle(android.graphics.Paint) -> randomTextStyle
    139:141:void randomPadding() -> randomPadding
    11:11:void <clinit>() -> <clinit>
com.jason.feick.widget.BadgeView -> com.jason.feick.widget.BadgeView:
    int POSITION_TOP_LEFT -> POSITION_TOP_LEFT
    int POSITION_TOP_RIGHT -> POSITION_TOP_RIGHT
    int POSITION_BOTTOM_LEFT -> POSITION_BOTTOM_LEFT
    int POSITION_BOTTOM_RIGHT -> POSITION_BOTTOM_RIGHT
    int POSITION_CENTER -> POSITION_CENTER
    int DEFAULT_MARGIN_DIP -> DEFAULT_MARGIN_DIP
    int DEFAULT_LR_PADDING_DIP -> DEFAULT_LR_PADDING_DIP
    int DEFAULT_CORNER_RADIUS_DIP -> DEFAULT_CORNER_RADIUS_DIP
    int DEFAULT_POSITION -> DEFAULT_POSITION
    int DEFAULT_BADGE_COLOR -> DEFAULT_BADGE_COLOR
    int DEFAULT_TEXT_COLOR -> DEFAULT_TEXT_COLOR
    android.view.animation.Animation fadeIn -> fadeIn
    android.view.animation.Animation fadeOut -> fadeOut
    android.content.Context context -> context
    android.view.View target -> target
    int badgePosition -> badgePosition
    int badgeMarginH -> badgeMarginH
    int badgeMarginV -> badgeMarginV
    int badgeColor -> badgeColor
    boolean isShown -> isShown
    android.graphics.drawable.ShapeDrawable badgeBg -> badgeBg
    int targetTabIndex -> targetTabIndex
    63:64:void <init>(android.content.Context) -> <init>
    67:68:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    79:80:void <init>(android.content.Context,android.view.View) -> <init>
    93:94:void <init>(android.content.Context,android.widget.TabWidget,int) -> <init>
    97:98:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    101:103:void <init>(android.content.Context,android.util.AttributeSet,int,android.view.View,int) -> <init>
    107:138:void init(android.content.Context,android.view.View,int) -> init
    142:176:void applyTo(android.view.View) -> applyTo
    183:184:void show() -> show
    192:193:void show(boolean) -> show
    201:202:void show(android.view.animation.Animation) -> show
    209:210:void hide() -> hide
    218:219:void hide(boolean) -> hide
    227:228:void hide(android.view.animation.Animation) -> hide
    235:236:void toggle() -> toggle
    244:245:void toggle(boolean) -> toggle
    254:255:void toggle(android.view.animation.Animation,android.view.animation.Animation) -> toggle
    258:271:void show(boolean,android.view.animation.Animation) -> show
    274:279:void hide(boolean,android.view.animation.Animation) -> hide
    282:287:void toggle(boolean,android.view.animation.Animation,android.view.animation.Animation) -> toggle
    296:309:int increment(int) -> increment
    319:319:int decrement(int) -> decrement
    324:331:android.graphics.drawable.ShapeDrawable getDefaultBackground() -> getDefaultBackground
    337:366:void applyLayoutParams() -> applyLayoutParams
    373:373:android.view.View getTarget() -> getTarget
    382:382:boolean isShown() -> isShown
    392:392:int getBadgePosition() -> getBadgePosition
    402:403:void setBadgePosition(int) -> setBadgePosition
    410:410:int getHorizontalBadgeMargin() -> getHorizontalBadgeMargin
    418:418:int getVerticalBadgeMargin() -> getVerticalBadgeMargin
    427:429:void setBadgeMargin(int) -> setBadgeMargin
    438:440:void setBadgeMargin(int,int) -> setBadgeMargin
    447:447:int getBadgeBackgroundColor() -> getBadgeBackgroundColor
    456:458:void setBadgeBackgroundColor(int) -> setBadgeBackgroundColor
    461:463:int dipToPixels(int) -> dipToPixels
    42:42:void <clinit>() -> <clinit>
com.jason.feick.widget.CleanableAutoCompleteTextView -> com.jason.feick.widget.CleanableAutoCompleteTextView:
    android.graphics.drawable.Drawable mRightDrawable -> mRightDrawable
    boolean isHasFocus -> isHasFocus
    android.content.Context context -> context
    26:29:void <init>(android.content.Context) -> <init>
    32:35:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    39:42:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    45:61:void initAutoComplete() -> initAutoComplete
    72:80:void saveHistory(java.lang.String) -> saveHistory
    86:98:void init() -> init
    110:123:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    170:179:void setClearDrawableVisible(boolean) -> setClearDrawableVisible
    183:184:void setShakeAnimation() -> setShakeAnimation
    188:191:android.view.animation.Animation shakeAnimation(int) -> shakeAnimation
    20:20:boolean access$202(com.jason.feick.widget.CleanableAutoCompleteTextView,boolean) -> access$202
    20:20:boolean access$200(com.jason.feick.widget.CleanableAutoCompleteTextView) -> access$200
    20:20:void access$300(com.jason.feick.widget.CleanableAutoCompleteTextView) -> access$300
    20:20:void access$400(com.jason.feick.widget.CleanableAutoCompleteTextView,java.lang.String) -> access$400
com.jason.feick.widget.CleanableAutoCompleteTextView$1 -> com.jason.feick.widget.CleanableAutoCompleteTextView$1:
com.jason.feick.widget.CleanableAutoCompleteTextView$FocusChangeListenerImpl -> com.jason.feick.widget.CleanableAutoCompleteTextView$a:
    com.jason.feick.widget.CleanableAutoCompleteTextView this$0 -> a
    126:126:void <init>(com.jason.feick.widget.CleanableAutoCompleteTextView) -> <init>
    129:141:void onFocusChange(android.view.View,boolean) -> onFocusChange
    126:126:void <init>(com.jason.feick.widget.CleanableAutoCompleteTextView,com.jason.feick.widget.CleanableAutoCompleteTextView$1) -> <init>
com.jason.feick.widget.CleanableAutoCompleteTextView$TextWatcherImpl -> com.jason.feick.widget.CleanableAutoCompleteTextView$b:
    com.jason.feick.widget.CleanableAutoCompleteTextView this$0 -> a
    146:146:void <init>(com.jason.feick.widget.CleanableAutoCompleteTextView) -> <init>
    149:151:void afterTextChanged(android.text.Editable) -> afterTextChanged
    157:157:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    163:163:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    146:146:void <init>(com.jason.feick.widget.CleanableAutoCompleteTextView,com.jason.feick.widget.CleanableAutoCompleteTextView$1) -> <init>
com.jason.feick.widget.CleanableEditText -> com.jason.feick.widget.CleanableEditText:
    android.graphics.drawable.Drawable mRightDrawable -> mRightDrawable
    boolean isHasFocus -> isHasFocus
    21:23:void <init>(android.content.Context) -> <init>
    25:27:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    30:32:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    37:49:void init() -> init
    68:81:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    121:129:void setClearDrawableVisible(boolean) -> setClearDrawableVisible
    133:134:void setShakeAnimation() -> setShakeAnimation
    138:141:android.view.animation.Animation shakeAnimation(int) -> shakeAnimation
    16:16:boolean access$202(com.jason.feick.widget.CleanableEditText,boolean) -> access$202
    16:16:boolean access$200(com.jason.feick.widget.CleanableEditText) -> access$200
com.jason.feick.widget.CleanableEditText$1 -> com.jason.feick.widget.CleanableEditText$1:
com.jason.feick.widget.CleanableEditText$FocusChangeListenerImpl -> com.jason.feick.widget.CleanableEditText$a:
    com.jason.feick.widget.CleanableEditText this$0 -> a
    84:84:void <init>(com.jason.feick.widget.CleanableEditText) -> <init>
    87:94:void onFocusChange(android.view.View,boolean) -> onFocusChange
    84:84:void <init>(com.jason.feick.widget.CleanableEditText,com.jason.feick.widget.CleanableEditText$1) -> <init>
com.jason.feick.widget.CleanableEditText$TextWatcherImpl -> com.jason.feick.widget.CleanableEditText$b:
    com.jason.feick.widget.CleanableEditText this$0 -> a
    99:99:void <init>(com.jason.feick.widget.CleanableEditText) -> <init>
    102:104:void afterTextChanged(android.text.Editable) -> afterTextChanged
    109:109:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    114:114:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    99:99:void <init>(com.jason.feick.widget.CleanableEditText,com.jason.feick.widget.CleanableEditText$1) -> <init>
com.jason.feick.widget.EventListener -> com.jason.feick.widget.EventListener:
    java.lang.String TAG -> TAG
    java.lang.Object handler -> handler
    java.lang.String clickMethod -> clickMethod
    java.lang.String longClickMethod -> longClickMethod
    java.lang.String itemClickMethod -> itemClickMethod
    java.lang.String itemSelectMethod -> itemSelectMethod
    java.lang.String nothingSelectedMethod -> nothingSelectedMethod
    java.lang.String itemLongClickMehtod -> itemLongClickMehtod
    45:47:void <init>(java.lang.Object) -> <init>
    50:51:com.jason.feick.widget.EventListener click(java.lang.String) -> click
    55:56:com.jason.feick.widget.EventListener longClick(java.lang.String) -> longClick
    60:61:com.jason.feick.widget.EventListener itemLongClick(java.lang.String) -> itemLongClick
    65:66:com.jason.feick.widget.EventListener itemClick(java.lang.String) -> itemClick
    70:71:com.jason.feick.widget.EventListener select(java.lang.String) -> select
    75:76:com.jason.feick.widget.EventListener noSelect(java.lang.String) -> noSelect
    80:80:boolean onLongClick(android.view.View) -> onLongClick
    85:86:boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
    92:94:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    97:98:void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
    102:103:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    107:108:void onClick(android.view.View) -> onClick
    112:127:java.lang.Object invokeClickMethod(java.lang.Object,java.lang.String,java.lang.Object[]) -> invokeClickMethod
    133:150:boolean invokeLongClickMethod(java.lang.Object,java.lang.String,java.lang.Object[]) -> invokeLongClickMethod
    156:172:java.lang.Object invokeItemClickMethod(java.lang.Object,java.lang.String,java.lang.Object[]) -> invokeItemClickMethod
    177:197:boolean invokeItemLongClickMethod(java.lang.Object,java.lang.String,java.lang.Object[]) -> invokeItemLongClickMethod
    202:219:java.lang.Object invokeItemSelectMethod(java.lang.Object,java.lang.String,java.lang.Object[]) -> invokeItemSelectMethod
    224:240:java.lang.Object invokeNoSelectMethod(java.lang.Object,java.lang.String,java.lang.Object[]) -> invokeNoSelectMethod
    34:34:void <clinit>() -> <clinit>
com.jason.feick.widget.GridviewNoScroll -> com.jason.feick.widget.GridviewNoScroll:
    11:13:void <init>(android.content.Context) -> <init>
    17:18:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    22:23:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    29:32:void onMeasure(int,int) -> onMeasure
com.jason.feick.widget.LayoutPanicBuyingView -> com.jason.feick.widget.LayoutPanicBuyingView:
    android.content.Context context -> context
    android.widget.TextView tv_shi -> tv_shi
    android.widget.TextView tv_fen -> tv_fen
    android.widget.TextView tv_miao -> tv_miao
    int qg_time -> qg_time
    java.util.Timer timer -> timer
    android.os.Handler handler -> handler
    38:115:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:115:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    50:115:void <init>(android.content.Context) -> <init>
    59:67:void init() -> init
    73:91:void setTime(int) -> setTime
    95:99:void onDetachedFromWindow() -> onDetachedFromWindow
    17:17:android.os.Handler access$100(com.jason.feick.widget.LayoutPanicBuyingView) -> access$100
    17:17:int access$200(com.jason.feick.widget.LayoutPanicBuyingView) -> access$200
com.jason.feick.widget.LayoutPanicBuyingView$1 -> com.jason.feick.widget.LayoutPanicBuyingView$1:
    com.jason.feick.widget.LayoutPanicBuyingView this$0 -> a
    115:115:void <init>(com.jason.feick.widget.LayoutPanicBuyingView) -> <init>
    117:118:void handleMessage(android.os.Message) -> handleMessage
com.jason.feick.widget.LayoutPanicBuyingView$FulstTimerTask -> com.jason.feick.widget.LayoutPanicBuyingView$a:
    com.jason.feick.widget.LayoutPanicBuyingView this$0 -> a
    104:104:void <init>(com.jason.feick.widget.LayoutPanicBuyingView) -> <init>
    108:109:void run() -> run
    104:104:void <init>(com.jason.feick.widget.LayoutPanicBuyingView,com.jason.feick.widget.LayoutPanicBuyingView$1) -> <init>
com.jason.feick.widget.LayoutProductInfoInfoShowView -> com.jason.feick.widget.LayoutProductInfoInfoShowView:
    java.lang.String TAG -> TAG
    android.content.Context context -> context
    com.jason.feick.widget.LoadingDataDialogManager loadingToast -> loadingToast
    android.view.View$OnTouchListener wvTouchListener -> wvTouchListener
    26:133:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    26:133:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    26:133:void <init>(android.content.Context) -> <init>
    57:131:void init() -> init
    199:200:void onOverScrolled(int,int,boolean,boolean) -> onOverScrolled
    25:25:java.lang.String access$000(com.jason.feick.widget.LayoutProductInfoInfoShowView) -> access$000
com.jason.feick.widget.LayoutProductInfoInfoShowView$1 -> com.jason.feick.widget.LayoutProductInfoInfoShowView$1:
    com.jason.feick.widget.LayoutProductInfoInfoShowView this$0 -> a
    76:76:void <init>(com.jason.feick.widget.LayoutProductInfoInfoShowView) -> <init>
    80:82:void onProgressChanged(android.webkit.WebView,int) -> onProgressChanged
com.jason.feick.widget.LayoutProductInfoInfoShowView$2 -> com.jason.feick.widget.LayoutProductInfoInfoShowView$2:
    com.jason.feick.widget.LayoutProductInfoInfoShowView this$0 -> a
    86:86:void <init>(com.jason.feick.widget.LayoutProductInfoInfoShowView) -> <init>
    90:94:void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    99:101:boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    107:109:void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    114:116:void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
com.jason.feick.widget.LayoutProductInfoInfoShowView$3 -> com.jason.feick.widget.LayoutProductInfoInfoShowView$3:
    com.jason.feick.widget.LayoutProductInfoInfoShowView this$0 -> a
    122:122:void <init>(com.jason.feick.widget.LayoutProductInfoInfoShowView) -> <init>
    126:126:boolean onGenericMotion(android.view.View,android.view.MotionEvent) -> onGenericMotion
com.jason.feick.widget.LayoutProductInfoInfoShowView$4 -> com.jason.feick.widget.LayoutProductInfoInfoShowView$4:
    float OldX1 -> b
    float OldY1 -> c
    float OldX2 -> d
    float OldY2 -> e
    float NewX1 -> f
    float NewY1 -> g
    float NewX2 -> h
    float NewY2 -> i
    com.jason.feick.widget.LayoutProductInfoInfoShowView this$0 -> a
    133:133:void <init>(com.jason.feick.widget.LayoutProductInfoInfoShowView) -> <init>
    139:191:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.jason.feick.widget.ListViewNoScroll -> com.jason.feick.widget.ListViewNoScroll:
    19:20:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    23:24:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    27:28:void <init>(android.content.Context) -> <init>
    34:37:void onMeasure(int,int) -> onMeasure
com.jason.feick.widget.LoadMoreListView -> com.jason.feick.widget.LoadMoreListView:
    java.lang.String TAG -> TAG
    android.content.Context context -> context
    int currentPage -> currentPage
    int totalPage -> totalPage
    int pageSize -> pageSize
    android.view.View loadMoreView -> loadMoreView
    com.jason.feick.widget.LoadMoreListView$OnLoadMoreDataListener onLoadMoreDataListener -> onLoadMoreDataListener
    int visibleLastIndex -> visibleLastIndex
    int visibleItemCount -> visibleItemCount
    boolean isLoadFinshed -> isLoadFinshed
    android.widget.ListAdapter adapter -> adapter
    boolean isAutoLoadMore -> isAutoLoadMore
    boolean autoCorrectCurrentPage -> autoCorrectCurrentPage
    android.database.DataSetObserver observer -> observer
    14:44:void <init>(android.content.Context) -> <init>
    14:49:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    14:54:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    58:59:void setLoadMoreView(android.view.View) -> setLoadMoreView
    63:66:void setOnLoadMoreDataListener(com.jason.feick.widget.LoadMoreListView$OnLoadMoreDataListener) -> setOnLoadMoreDataListener
    70:71:void setAutoLoadMore(boolean) -> setAutoLoadMore
    75:79:void setTotalPage(int) -> setTotalPage
    83:97:void setTotalSize(long) -> setTotalSize
    101:101:int getCurrentPage() -> getCurrentPage
    106:106:int getNextPage() -> getNextPage
    111:111:int getPageSize() -> getPageSize
    116:125:void setPageSize(int) -> setPageSize
    129:131:void openAutoCorrectCurrentPage(int) -> openAutoCorrectCurrentPage
    135:136:void closeAutoCorrectCurrentPage() -> closeAutoCorrectCurrentPage
    140:146:void loadFinished() -> loadFinished
    150:172:void correctCurrentPage() -> correctCurrentPage
    176:177:void loadDataError() -> loadDataError
    181:214:void setAdapter(android.widget.ListAdapter) -> setAdapter
    218:218:void addFooterView(android.view.View) -> addFooterView
    222:224:void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    228:242:void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    246:250:void onClick(android.view.View) -> onClick
    11:11:void setAdapter(android.widget.Adapter) -> setAdapter
    11:11:void access$000(com.jason.feick.widget.LoadMoreListView) -> access$000
com.jason.feick.widget.LoadMoreListView$1 -> com.jason.feick.widget.LoadMoreListView$1:
    com.jason.feick.widget.LoadMoreListView this$0 -> a
    32:32:void <init>(com.jason.feick.widget.LoadMoreListView) -> <init>
    35:37:void onChanged() -> onChanged
com.jason.feick.widget.LoadMoreListView$OnLoadMoreDataListener -> com.jason.feick.widget.LoadMoreListView$OnLoadMoreDataListener:
    void loadMore(android.view.View) -> loadMore
    void loadMoreFinish(android.view.View) -> loadMoreFinish
com.jason.feick.widget.LoadingDataDialog -> com.jason.feick.widget.LoadingDataDialog:
    android.content.Context context -> context
    android.widget.TextView tv_msg -> tv_msg
    android.graphics.drawable.AnimationDrawable mADAnimationDrawable -> mADAnimationDrawable
    android.widget.ImageView mIVAnimationContent -> mIVAnimationContent
    28:31:void <init>(android.content.Context) -> <init>
    35:38:void <init>(android.content.Context,boolean,android.content.DialogInterface$OnCancelListener) -> <init>
    41:44:void <init>(android.content.Context,int) -> <init>
    48:48:void init() -> init
    52:57:void onCreate(android.os.Bundle) -> onCreate
    77:94:android.widget.LinearLayout creatLayout() -> creatLayout
    98:101:void stopAnimation() -> stopAnimation
    105:107:void setMessage(java.lang.String) -> setMessage
    111:112:void setMessage(int) -> setMessage
com.jason.feick.widget.LoadingDataDialogManager -> com.jason.feick.widget.LoadingDataDialogManager:
    java.lang.String TAG -> TAG
    int index -> index
    com.jason.feick.widget.LoadingDataDialog progressDialog -> progressDialog
    11:27:void <init>(android.content.Context,java.lang.String) -> <init>
    31:31:com.jason.feick.widget.LoadingDataDialogManager init(android.content.Context) -> init
    36:36:com.jason.feick.widget.LoadingDataDialogManager init(android.content.Context,java.lang.String) -> init
    41:42:com.jason.feick.widget.LoadingDataDialogManager init(android.content.Context,int) -> init
    47:52:void destroy() -> destroy
    56:64:void show() -> show
    68:72:void update(java.lang.String) -> update
    76:86:void dismiss() -> dismiss
com.jason.feick.widget.LruMemoryCache -> com.jason.feick.widget.LruMemoryCache:
    java.util.LinkedHashMap map -> map
    int size -> size
    int maxSize -> maxSize
    int putCount -> putCount
    int createCount -> createCount
    int evictionCount -> evictionCount
    int hitCount -> hitCount
    int missCount -> missCount
    16:22:void <init>(int) -> <init>
    25:59:java.lang.Object get(java.lang.Object) -> get
    63:81:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    86:108:void trimToSize(int) -> trimToSize
    111:125:java.lang.Object remove(java.lang.Object) -> remove
    129:129:void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
    132:132:java.lang.Object create(java.lang.Object) -> create
    136:142:int safeSizeOf(java.lang.Object,java.lang.Object) -> safeSizeOf
    146:146:int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    150:151:void evictAll() -> evictAll
    154:154:int size() -> size
    158:158:int maxSize() -> maxSize
    162:162:int hitCount() -> hitCount
    166:166:int missCount() -> missCount
    170:170:int createCount() -> createCount
    174:174:int putCount() -> putCount
    178:178:int evictionCount() -> evictionCount
    182:182:java.util.Map snapshot() -> snapshot
    186:194:java.lang.String toString() -> toString
com.jason.feick.widget.MarqueeTextView -> com.jason.feick.widget.MarqueeTextView:
    boolean mStopMarquee -> mStopMarquee
    java.lang.String mText -> mText
    float mCoordinateX -> mCoordinateX
    float mTextWidth -> mTextWidth
    android.os.Handler mHandler -> mHandler
    20:54:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    24:29:void setText(java.lang.String) -> setText
    33:37:void onAttachedToWindow() -> onAttachedToWindow
    41:45:void onDetachedFromWindow() -> onDetachedFromWindow
    49:52:void onDraw(android.graphics.Canvas) -> onDraw
    11:11:float access$000(com.jason.feick.widget.MarqueeTextView) -> access$000
    11:11:float access$100(com.jason.feick.widget.MarqueeTextView) -> access$100
    11:11:float access$002(com.jason.feick.widget.MarqueeTextView,float) -> access$002
    11:11:boolean access$200(com.jason.feick.widget.MarqueeTextView) -> access$200
com.jason.feick.widget.MarqueeTextView$1 -> com.jason.feick.widget.MarqueeTextView$1:
    com.jason.feick.widget.MarqueeTextView this$0 -> a
    54:54:void <init>(com.jason.feick.widget.MarqueeTextView) -> <init>
    57:76:void handleMessage(android.os.Message) -> handleMessage
com.jason.feick.widget.MyExpandableListView -> com.jason.feick.widget.MyExpandableListView:
    14:16:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    21:26:void onMeasure(int,int) -> onMeasure
com.jason.feick.widget.MyGallery -> com.jason.feick.widget.MyGallery:
    18:20:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    23:25:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    28:30:void <init>(android.content.Context) -> <init>
    37:37:boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
com.jason.feick.widget.MyGridView -> com.jason.feick.widget.MyGridView:
    14:15:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    18:19:void <init>(android.content.Context) -> <init>
    22:23:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    28:31:void onMeasure(int,int) -> onMeasure
com.jason.feick.widget.MyListView -> com.jason.feick.widget.MyListView:
    15:16:void <init>(android.content.Context) -> <init>
    20:21:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    25:26:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    31:34:void onMeasure(int,int) -> onMeasure
com.jason.feick.widget.MyScrollLayout -> com.jason.feick.widget.MyScrollLayout:
    java.lang.String TAG -> TAG
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    int SNAP_VELOCITY -> SNAP_VELOCITY
    android.widget.Scroller mScroller -> mScroller
    int mCurScreen -> mCurScreen
    int mDefaultScreen -> mDefaultScreen
    float mLastMotionX -> mLastMotionX
    com.jason.feick.widget.MyScrollLayout$OnViewChangeListener mOnViewChangeListener -> mOnViewChangeListener
    20:34:void <init>(android.content.Context) -> <init>
    20:40:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    20:46:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    49:54:void init(android.content.Context) -> init
    59:72:void onLayout(boolean,int,int,int,int) -> onLayout
    77:86:void onMeasure(int,int) -> onMeasure
    89:92:void snapToDestination() -> snapToDestination
    96:108:void snapToScreen(int) -> snapToScreen
    113:117:void computeScroll() -> computeScroll
    122:183:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    187:193:boolean IsCanMove(int) -> IsCanMove
    197:198:void SetOnViewChangeListener(com.jason.feick.widget.MyScrollLayout$OnViewChangeListener) -> SetOnViewChangeListener
com.jason.feick.widget.MyScrollLayout$OnViewChangeListener -> com.jason.feick.widget.MyScrollLayout$OnViewChangeListener:
    void OnViewChange(int) -> OnViewChange
com.jason.feick.widget.ProductInfoParamsGrid -> com.jason.feick.widget.ProductInfoParamsGrid:
    com.jason.feick.widget.ProductInfoParamsGrid$IProductInfoParamsChange change -> change
    android.widget.TextView tv_current -> tv_current
    28:29:void setChange(com.jason.feick.widget.ProductInfoParamsGrid$IProductInfoParamsChange) -> setChange
    38:44:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    50:53:void onMeasure(int,int) -> onMeasure
    57:58:void setVerticalScrollBarEnabled(boolean) -> setVerticalScrollBarEnabled
    72:72:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.jason.feick.widget.ProductInfoParamsGrid$IProductInfoParamsChange -> com.jason.feick.widget.ProductInfoParamsGrid$IProductInfoParamsChange:
    void onChange() -> onChange
com.jason.feick.widget.Select -> com.jason.feick.widget.Select:
    java.lang.String selected() -> selected
    java.lang.String noSelected() -> noSelected
com.jason.feick.widget.ViewException -> com.jason.feick.widget.ViewException:
    long serialVersionUID -> serialVersionUID
    java.lang.String strMsg -> strMsg
    22:26:void <init>(java.lang.String) -> <init>
    29:33:void printStackTrace() -> printStackTrace
com.jason.feick.widget.ViewInject -> com.jason.feick.widget.ViewInject:
    int id() -> id
    java.lang.String click() -> click
    java.lang.String longClick() -> longClick
    java.lang.String itemClick() -> itemClick
    java.lang.String itemLongClick() -> itemLongClick
    com.jason.feick.widget.Select select() -> select
org.json.simple.ItemList -> org.json.simple.ItemList:
    java.lang.String sp -> sp
    java.util.List items -> items
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
    void <init>(java.lang.String,java.lang.String) -> <init>
    void <init>(java.lang.String,java.lang.String,boolean) -> <init>
    java.util.List getItems() -> getItems
    java.lang.String[] getArray() -> getArray
    void split(java.lang.String,java.lang.String,java.util.List,boolean) -> split
    void split(java.lang.String,java.lang.String,java.util.List) -> split
    void setSP(java.lang.String) -> setSP
    void add(int,java.lang.String) -> add
    void add(java.lang.String) -> add
    void addAll(org.json.simple.ItemList) -> addAll
    void addAll(java.lang.String) -> addAll
    void addAll(java.lang.String,java.lang.String) -> addAll
    void addAll(java.lang.String,java.lang.String,boolean) -> addAll
    java.lang.String get(int) -> get
    int size() -> size
    java.lang.String toString() -> toString
    java.lang.String toString(java.lang.String) -> toString
    void clear() -> clear
    void reset() -> reset
org.json.simple.JSONArray -> org.json.simple.JSONArray:
    long serialVersionUID -> serialVersionUID
    void <init>() -> <init>
    void writeJSONString(java.util.List,java.io.Writer) -> writeJSONString
    void writeJSONString(java.io.Writer) -> writeJSONString
    java.lang.String toJSONString(java.util.List) -> toJSONString
    java.lang.String toJSONString() -> toJSONString
    java.lang.String toString() -> toString
org.json.simple.JSONAware -> org.json.simple.JSONAware:
    java.lang.String toJSONString() -> toJSONString
org.json.simple.JSONObject -> org.json.simple.JSONObject:
    long serialVersionUID -> serialVersionUID
    void <init>() -> <init>
    void writeJSONString(java.util.Map,java.io.Writer) -> writeJSONString
    void writeJSONString(java.io.Writer) -> writeJSONString
    java.lang.String toJSONString(java.util.Map) -> toJSONString
    java.lang.String toJSONString() -> toJSONString
    java.lang.String toJSONString(java.lang.String,java.lang.Object,java.lang.StringBuffer) -> toJSONString
    java.lang.String toString() -> toString
    java.lang.String toString(java.lang.String,java.lang.Object) -> toString
    java.lang.String escape(java.lang.String) -> escape
org.json.simple.JSONStreamAware -> org.json.simple.JSONStreamAware:
    void writeJSONString(java.io.Writer) -> writeJSONString
org.json.simple.JSONValue -> org.json.simple.JSONValue:
    void <init>() -> <init>
    java.lang.Object parse(java.io.Reader) -> parse
    java.lang.Object parse(java.lang.String) -> parse
    java.lang.Object parseWithException(java.io.Reader) -> parseWithException
    java.lang.Object parseWithException(java.lang.String) -> parseWithException
    void writeJSONString(java.lang.Object,java.io.Writer) -> writeJSONString
    java.lang.String toJSONString(java.lang.Object) -> toJSONString
    java.lang.String escape(java.lang.String) -> escape
    void escape(java.lang.String,java.lang.StringBuffer) -> escape
org.json.simple.parser.ContainerFactory -> org.json.simple.parser.ContainerFactory:
    java.util.Map createObjectContainer() -> createObjectContainer
    java.util.List creatArrayContainer() -> creatArrayContainer
org.json.simple.parser.ContentHandler -> org.json.simple.parser.ContentHandler:
    void startJSON() -> startJSON
    void endJSON() -> endJSON
    boolean startObject() -> startObject
    boolean endObject() -> endObject
    boolean startObjectEntry(java.lang.String) -> startObjectEntry
    boolean endObjectEntry() -> endObjectEntry
    boolean startArray() -> startArray
    boolean endArray() -> endArray
    boolean primitive(java.lang.Object) -> primitive
org.json.simple.parser.JSONParser -> org.json.simple.parser.JSONParser:
    int S_INIT -> S_INIT
    int S_IN_FINISHED_VALUE -> S_IN_FINISHED_VALUE
    int S_IN_OBJECT -> S_IN_OBJECT
    int S_IN_ARRAY -> S_IN_ARRAY
    int S_PASSED_PAIR_KEY -> S_PASSED_PAIR_KEY
    int S_IN_PAIR_VALUE -> S_IN_PAIR_VALUE
    int S_END -> S_END
    int S_IN_ERROR -> S_IN_ERROR
    java.util.LinkedList handlerStatusStack -> handlerStatusStack
    org.json.simple.parser.Yylex lexer -> lexer
    org.json.simple.parser.Yytoken token -> token
    int status -> status
    void <init>() -> <init>
    int peekStatus(java.util.LinkedList) -> peekStatus
    void reset() -> reset
    void reset(java.io.Reader) -> reset
    int getPosition() -> getPosition
    java.lang.Object parse(java.lang.String) -> parse
    java.lang.Object parse(java.lang.String,org.json.simple.parser.ContainerFactory) -> parse
    java.lang.Object parse(java.io.Reader) -> parse
    java.lang.Object parse(java.io.Reader,org.json.simple.parser.ContainerFactory) -> parse
    void nextToken() -> nextToken
    java.util.Map createObjectContainer(org.json.simple.parser.ContainerFactory) -> createObjectContainer
    java.util.List createArrayContainer(org.json.simple.parser.ContainerFactory) -> createArrayContainer
    void parse(java.lang.String,org.json.simple.parser.ContentHandler) -> parse
    void parse(java.lang.String,org.json.simple.parser.ContentHandler,boolean) -> parse
    void parse(java.io.Reader,org.json.simple.parser.ContentHandler) -> parse
    void parse(java.io.Reader,org.json.simple.parser.ContentHandler,boolean) -> parse
org.json.simple.parser.ParseException -> org.json.simple.parser.ParseException:
    long serialVersionUID -> serialVersionUID
    int ERROR_UNEXPECTED_CHAR -> ERROR_UNEXPECTED_CHAR
    int ERROR_UNEXPECTED_TOKEN -> ERROR_UNEXPECTED_TOKEN
    int ERROR_UNEXPECTED_EXCEPTION -> ERROR_UNEXPECTED_EXCEPTION
    int errorType -> errorType
    java.lang.Object unexpectedObject -> unexpectedObject
    int position -> position
    void <init>(int) -> <init>
    void <init>(int,java.lang.Object) -> <init>
    void <init>(int,int,java.lang.Object) -> <init>
    int getErrorType() -> getErrorType
    void setErrorType(int) -> setErrorType
    int getPosition() -> getPosition
    void setPosition(int) -> setPosition
    java.lang.Object getUnexpectedObject() -> getUnexpectedObject
    void setUnexpectedObject(java.lang.Object) -> setUnexpectedObject
    java.lang.String toString() -> toString
org.json.simple.parser.Yylex -> org.json.simple.parser.a:
    int YYEOF -> a
    int ZZ_BUFFERSIZE -> d
    int YYINITIAL -> b
    int STRING_BEGIN -> c
    int[] ZZ_LEXSTATE -> e
    java.lang.String ZZ_CMAP_PACKED -> f
    char[] ZZ_CMAP -> g
    int[] ZZ_ACTION -> h
    java.lang.String ZZ_ACTION_PACKED_0 -> i
    int[] ZZ_ROWMAP -> j
    java.lang.String ZZ_ROWMAP_PACKED_0 -> k
    int[] ZZ_TRANS -> l
    int ZZ_UNKNOWN_ERROR -> m
    int ZZ_NO_MATCH -> n
    int ZZ_PUSHBACK_2BIG -> o
    java.lang.String[] ZZ_ERROR_MSG -> p
    int[] ZZ_ATTRIBUTE -> q
    java.lang.String ZZ_ATTRIBUTE_PACKED_0 -> r
    java.io.Reader zzReader -> s
    int zzState -> t
    int zzLexicalState -> u
    char[] zzBuffer -> v
    int zzMarkedPos -> w
    int zzCurrentPos -> x
    int zzStartRead -> y
    int zzEndRead -> z
    int yyline -> A
    int yychar -> B
    int yycolumn -> C
    boolean zzAtBOL -> D
    boolean zzAtEOF -> E
    java.lang.StringBuffer sb -> F
    int[] zzUnpackAction() -> g
    int zzUnpackAction(java.lang.String,int,int[]) -> a
    int[] zzUnpackRowMap() -> h
    int zzUnpackRowMap(java.lang.String,int,int[]) -> b
    int[] zzUnpackAttribute() -> i
    int zzUnpackAttribute(java.lang.String,int,int[]) -> c
    int getPosition() -> a
    void <init>(java.io.Reader) -> <init>
    void <init>(java.io.InputStream) -> <init>
    char[] zzUnpackCMap(java.lang.String) -> a
    boolean zzRefill() -> j
    void yyclose() -> b
    void yyreset(java.io.Reader) -> a
    int yystate() -> c
    void yybegin(int) -> a
    java.lang.String yytext() -> d
    char yycharat(int) -> b
    int yylength() -> e
    void zzScanError(int) -> d
    void yypushback(int) -> c
    org.json.simple.parser.Yytoken yylex() -> f
    void <clinit>() -> <clinit>
org.json.simple.parser.Yytoken -> org.json.simple.parser.Yytoken:
    int TYPE_VALUE -> TYPE_VALUE
    int TYPE_LEFT_BRACE -> TYPE_LEFT_BRACE
    int TYPE_RIGHT_BRACE -> TYPE_RIGHT_BRACE
    int TYPE_LEFT_SQUARE -> TYPE_LEFT_SQUARE
    int TYPE_RIGHT_SQUARE -> TYPE_RIGHT_SQUARE
    int TYPE_COMMA -> TYPE_COMMA
    int TYPE_COLON -> TYPE_COLON
    int TYPE_EOF -> TYPE_EOF
    int type -> type
    java.lang.Object value -> value
    void <init>(int,java.lang.Object) -> <init>
    java.lang.String toString() -> toString
